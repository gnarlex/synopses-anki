{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "7d30f3de-daf9-11ea-83cc-f0d5bf9cf059",
    "deck_config_uuid": "ae1a055a-8552-11ea-95a2-4494fca6223c",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "crowdanki_uuid": "ae1a055a-8552-11ea-95a2-4494fca6223c",
            "dyn": false,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 0,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": true,
                "delays": [
                    1.0,
                    10.0,
                    60.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    7
                ],
                "order": 1,
                "perDay": 10,
                "separate": true
            },
            "replayq": true,
            "rev": {
                "bury": false,
                "ease4": 1.3,
                "fuzz": 0.05,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "minSpace": 1,
                "perDay": 200
            },
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 10,
    "extendRev": 50,
    "media_files": [
        "0788c61356c94792b1302e9b4b897450-oa-1-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-1-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-2-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-2-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-3-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-3-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-4-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-4-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-5-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-5-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-6-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-6-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-7-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-7-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-8-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-8-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-9-A.svg",
        "0788c61356c94792b1302e9b4b897450-oa-9-Q.svg",
        "0788c61356c94792b1302e9b4b897450-oa-O.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-1-A.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-1-Q.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-2-A.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-2-Q.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-3-A.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-3-Q.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-4-A.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-4-Q.svg",
        "112d5bc457df4c1c87cb36e9e6963aba-oa-O.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-1-A.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-1-Q.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-2-A.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-2-Q.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-3-A.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-3-Q.svg",
        "113afdf3d1b6424cb10dd5de6252af54-ao-O.svg",
        "1280px-Classic_DH_Parameters_Convention.png",
        "13f0da2abae74af5a41312382f394c8b-oa-1-A.svg",
        "13f0da2abae74af5a41312382f394c8b-oa-1-Q.svg",
        "13f0da2abae74af5a41312382f394c8b-oa-2-A.svg",
        "13f0da2abae74af5a41312382f394c8b-oa-2-Q.svg",
        "13f0da2abae74af5a41312382f394c8b-oa-3-A.svg",
        "13f0da2abae74af5a41312382f394c8b-oa-3-Q.svg",
        "13f0da2abae74af5a41312382f394c8b-oa-O.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-1-A.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-1-Q.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-2-A.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-2-Q.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-3-A.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-3-Q.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-4-A.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-4-Q.svg",
        "1ac58c86e4334a3bbd23be0ac4f13b29-oa-O.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-1-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-1-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-2-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-2-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-3-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-3-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-4-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-4-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-5-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-5-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-6-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-6-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-7-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-7-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-8-A.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-8-Q.svg",
        "414719e53afd4dfb8092ebad7fd169b0-oa-O.svg",
        "54d1d631eac04aec8e447719b4970190-oa-1-A.svg",
        "54d1d631eac04aec8e447719b4970190-oa-1-Q.svg",
        "54d1d631eac04aec8e447719b4970190-oa-2-A.svg",
        "54d1d631eac04aec8e447719b4970190-oa-2-Q.svg",
        "54d1d631eac04aec8e447719b4970190-oa-O.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-1-A.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-1-Q.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-2-A.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-2-Q.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-3-A.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-3-Q.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-4-A.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-4-Q.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-5-A.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-5-Q.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-6-A.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-6-Q.svg",
        "56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg",
        "800px-Pinhole-camera.svg.png",
        "83d66e5428c94228b5d2e988e27e0536-ao-1-A.svg",
        "83d66e5428c94228b5d2e988e27e0536-ao-1-Q.svg",
        "83d66e5428c94228b5d2e988e27e0536-ao-2-A.svg",
        "83d66e5428c94228b5d2e988e27e0536-ao-2-Q.svg",
        "83d66e5428c94228b5d2e988e27e0536-ao-O.svg",
        "840119a144b847598b856fc659d992ca-oa-1-A.svg",
        "840119a144b847598b856fc659d992ca-oa-1-Q.svg",
        "840119a144b847598b856fc659d992ca-oa-2-A.svg",
        "840119a144b847598b856fc659d992ca-oa-2-Q.svg",
        "840119a144b847598b856fc659d992ca-oa-3-A.svg",
        "840119a144b847598b856fc659d992ca-oa-3-Q.svg",
        "840119a144b847598b856fc659d992ca-oa-O.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-1-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-1-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-2-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-2-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-3-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-3-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-4-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-4-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-5-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-5-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-6-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-6-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-7-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-7-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-8-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-8-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-9-A.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-9-Q.svg",
        "9f399ffc3cf7490f9a866042099c82e3-oa-O.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-1-A.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-1-Q.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-2-A.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-2-Q.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-3-A.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-3-Q.svg",
        "9f579d0fbba24bf3b8a48053fe92f70a-oa-O.svg",
        "Screenshot_20200709_205212.png",
        "a9aeca45c52f49039133c747ce86bbc3-ao-1-A.svg",
        "a9aeca45c52f49039133c747ce86bbc3-ao-1-Q.svg",
        "a9aeca45c52f49039133c747ce86bbc3-ao-2-A.svg",
        "a9aeca45c52f49039133c747ce86bbc3-ao-2-Q.svg",
        "a9aeca45c52f49039133c747ce86bbc3-ao-3-A.svg",
        "a9aeca45c52f49039133c747ce86bbc3-ao-3-Q.svg",
        "a9aeca45c52f49039133c747ce86bbc3-ao-O.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-1-A.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-1-Q.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-2-A.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-2-Q.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-3-A.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-3-Q.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-4-A.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-4-Q.svg",
        "b36bbe8c67b942558214d4db8dd34d22-oa-O.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-1-A.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-1-Q.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-2-A.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-2-Q.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-3-A.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-3-Q.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-4-A.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-4-Q.svg",
        "b52aca2c96b24a9c884c6e8162ab339a-ao-O.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-1-A.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-1-Q.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-2-A.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-2-Q.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-3-A.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-3-Q.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-4-A.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-4-Q.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-5-A.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-5-Q.svg",
        "c4ae4c295de24035a03d8385d8b8ba0c-oa-O.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-1-A.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-1-Q.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-2-A.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-2-Q.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-3-A.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-3-Q.svg",
        "d660b055d21142ee8888c377dd8578bd-oa-O.svg",
        "intelligent_system.png",
        "paste-066676f2d20a4908a116851f9a3db6c936261916.jpg",
        "paste-0c37fe70f1c4f5203f2e3cdff4e243c49d462cee.png",
        "paste-0ca7390c2382b57531c17483b71128c289d52121.png",
        "paste-115187d726a1d0d7ca6c65c7f8ce040677d88004.png",
        "paste-11d4391d8e7fd28be496f8b54683a4519de6cbea.jpg",
        "paste-15a5317453c403f59e9455e9c4fb07a4e32d1b36.png",
        "paste-1c4547a12f7f689e2cb0c4f3c121fb250f275429.png",
        "paste-1da3ab170da64433c6c2077092926d3c9d614097.png",
        "paste-224fc1676b6f1f41e098abf57e89dce45c3e2d78.jpg",
        "paste-24186cfaa145645b1e9e5d0a3da2437af6179bd7.png",
        "paste-2542023b0c35802e266c1bc607b32702d3ae88d9.png",
        "paste-28b75a7cfe625f31e998def00989b4077d7f1b24.jpg",
        "paste-2b9d3ed7c74b6929b4cf9439fc71618ecb2a4523.png",
        "paste-2ec872e0b0bd08887d544cc1553de01d73f7a6c8.png",
        "paste-31297297ccf0b54f2baa5db4df2fc89a95cb272d.png",
        "paste-3951a6c79977e8ed25baaf5ffcc3a03ae9f01969.png",
        "paste-3df9bb6796a2f9513c7d64199ee626dd1a21b7f0.png",
        "paste-40755e7be985b472193e9eebb8297ca30d604f7f.jpg",
        "paste-410656846ea53ea88449c3efecbf134dcbc3173f.png",
        "paste-43bfc0dce773f892075f3286ccb57b450049ccb5.png",
        "paste-43e616e35dfd09c0f7454bb0411a2177cee9eb94.png",
        "paste-46d4edf2d02cf6220ca1d47cc6a5fba6a0a07294.png",
        "paste-48e1ac9acdb0ef89cb22623b92ca57e096e4e57f.png",
        "paste-4e1354ba606f9b1e7bcbb07152e0bf9aecefe117.png",
        "paste-56aab2219fae9f1c26ffc9ae602ed8085fb0413a.png",
        "paste-57413c8a2931a2c12f75eb3281b7e99add196199.png",
        "paste-5bbdc15c9d9688e2ca8518c2cb510dbf731dfd7e.png",
        "paste-6260446bec12c2bed7cf6e1779a618d0c19d6dcd.png",
        "paste-62fadffd85e766411559ccb3fa2dc6075fdf42a1.png",
        "paste-669745fddab32d2649b5cfaa3ef9e9aabbc6e7aa.png",
        "paste-703e38d10eac55f17d7fbe58d19cd75012d491c5.png",
        "paste-71252cd41462049daf62ebd673f00f9837362516.png",
        "paste-777cf2e547580abe8db8cc05621326425a023f23.png",
        "paste-820e6a92affacef82c89053565997ff068720e19.png",
        "paste-85c0692675f6fca531f16916d4d1d9b1057c68de.jpg",
        "paste-86100260c7b60c962bf8476365f99f35aa07ada3.png",
        "paste-876b09246aef7d6fe5f88ae1fcb3e0e8f4d4aa29.png",
        "paste-88d119bd882ac5f686111e2a34f98ca81f160d70.jpg",
        "paste-8c317522cf9f4b10e8dedc5a009ef22c46772c37.png",
        "paste-8d7eb8e64e7a1a468b16d218a955fee5c373912b.png",
        "paste-92f5224dd6ecd186a1be27b7c4ff3f335918604e.png",
        "paste-9389a8995be7a1c2a6baf05d3f1075e42e332faf.png",
        "paste-95d1d1929564e35fd7f5a0f990f41e831285933b.png",
        "paste-9c6b98dbf83f1c0bddf92f099fe015e04db121d6.png",
        "paste-9e91407336f3493892bc6e96a3331ecd4bead2c3.png",
        "paste-9eacdf50bf28e81391330d773616ec61661854a4.png",
        "paste-a0adbb537e11aad43b67346104f065cb27c89590.png",
        "paste-a266491fc10e1c79e9820e4fdbd7f90102a1830b.png",
        "paste-a6c5a767145e7e896b495705c3db6f383610fb6f.png",
        "paste-a76a7fa975a0aad12f12916e5807c6150dcf9dbe.png",
        "paste-ac3365fe8f960ca387efb1228a4c853e32c9ab51.png",
        "paste-ba1e64dd3e577c17e06eade2412e880fa1389ad9.jpg",
        "paste-bb91b8589faf261596c5e37f719a260ab41aaaa1.png",
        "paste-bdbebb1d61a87b4c76b037c84ac56c557868a7a1.png",
        "paste-be6798236a93f94b4448ec1b23f14d0582cb227d.png",
        "paste-c0e2e55b2cc68def84367aa5d4a0e3a95b1bb787.png",
        "paste-c8badbc7d283e6e9670386875518a7e65c9f1adb.jpg",
        "paste-d39e957916474513ec4514a1a42b774d45a6d67e.png",
        "paste-d4c849e53a9de5be94c4f0761f4ac07d67a5f70c.png",
        "paste-d924e53ba976bd8e29ccfd26478ffaaeab393957.png",
        "paste-e23b2eed6effefe603df62b1ea0ac03d8d5ded8a.png",
        "paste-e2dc17e9bf2ef683161e941e961931c0946277e0.png",
        "paste-e7cc311a4f5deb6bb2ddbe6f5967f6dab0d4ed51.png",
        "paste-eaa6309fcc0e4e2394bb2d06404e9023ad71500a.png",
        "paste-f35d9ed917bf67e2bdfa72e0af046a6e7c35063f.png",
        "paste-f5e871a0277744f8935d7cce0f208788f580d3a4.png",
        "paste-f6001f0a84beca637268bc93f43b5e336b33b81e.png",
        "paste-f60ab7907065f1346ad274dadb1808a91bbe3745.jpg",
        "paste-f6bf610e0fd38d160198b14e8b436ea71c029e96.png",
        "paste-f793b808bdc47e8d9252687a5a733578eae1d905.png",
        "paste-f9f4bba946b4d6d3f166ea19e468335e780bc594.png",
        "tmp0foyso_a.png",
        "tmp0mhsxm47.png",
        "tmp0t00yfmx.png",
        "tmp2lwhkdiv.png",
        "tmp30a62sgr.png",
        "tmp310jui4m.png",
        "tmp6c1v99_q.png",
        "tmp7nypx6dh.png",
        "tmp7sibw89p.png",
        "tmpk4ogi6ok.png",
        "tmpk9d0143z.png",
        "tmpmrb_1cg7.png",
        "tmpoif1tql0.png",
        "tmprneoowoe.png",
        "tmpvtwh0z17.png"
    ],
    "mid": 1523896690542,
    "name": "Kognitive Systeme",
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "css": "/* GENERAL CARD STYLE */\n.card {\n  font-family: \"Helvetica LT Std\", Helvetica, Arial, Sans;\n  font-size: 150%;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n\n/* OCCLUSION CSS START - don't edit this */\n#io-overlay {\n  position:absolute;\n  top:0;\n  width:100%;\n  z-index:3\n}\n\n#io-original {\n  position:relative;\n  top:0;\n  width:100%;\n  z-index:2;\n  visibility: hidden;\n}\n\n#io-wrapper {\n  position:relative;\n  width: 100%;\n}\n/* OCCLUSION CSS END */\n\n/* OTHER STYLES */\n#io-header{\n  font-size: 1.1em;\n  margin-bottom: 0.2em;\n}\n\n#io-footer{\n  max-width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.8em;\n  font-style: italic;\n}\n\n#io-extra-wrapper{\n  /* the wrapper is needed to center the\n  left-aligned blocks below it */\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.5em;\n}\n\n#io-extra{\n  text-align:center;\n  display: inline-block;\n}\n\n.io-extra-entry{\n  margin-top: 0.8em;\n  font-size: 0.9em;\n  text-align:left;\n}\n\n.io-field-descr{\n  margin-bottom: 0.2em;\n  font-weight: bold;\n  font-size: 1em;\n}\n\n#io-revl-btn {\n  font-size: 0.5em;\n}\n\n/* ADJUSTMENTS FOR MOBILE DEVICES */\n\n.mobile .card, .mobile #content {\n  font-size: 120%;\n  margin: 0;\n}\n\n.mobile #io-extra-wrapper {\n  width: 95%;\n}\n\n.mobile #io-revl-btn {\n  font-size: 0.8em;\n}\n",
            "flds": [
                {
                    "font": "Arial",
                    "media": [],
                    "name": "ID (hidden)",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Header",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Image",
                    "ord": 2,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Question Mask",
                    "ord": 3,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Footer",
                    "ord": 4,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Remarks",
                    "ord": 5,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Sources",
                    "ord": 6,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Extra 1",
                    "ord": 7,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Extra 2",
                    "ord": 8,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Answer Mask",
                    "ord": 9,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Original Mask",
                    "ord": 10,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Image Occlusion Enhanced",
            "req": [
                [
                    0,
                    "any",
                    [
                        2
                    ]
                ]
            ],
            "sortf": 1,
            "tags": [
                "",
                "kapitel16",
                "schließen",
                ""
            ],
            "tmpls": [
                {
                    "afmt": "{{#Image}}\n<div id=\"io-header\">{{Header}}</div>\n<div id=\"io-wrapper\">\n  <div id=\"io-overlay\">{{Answer Mask}}</div>\n  <div id=\"io-original\">{{Image}}</div>\n</div>\n{{#Footer}}<div id=\"io-footer\">{{Footer}}</div>{{/Footer}}\n<button id=\"io-revl-btn\" onclick=\"toggle();\">Toggle Masks</button>\n<div id=\"io-extra-wrapper\">\n  <div id=\"io-extra\">\n    {{#Remarks}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Remarks</div>{{Remarks}}\n      </div>\n    {{/Remarks}}\n    {{#Sources}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Sources</div>{{Sources}}\n      </div>\n    {{/Sources}}\n    {{#Extra 1}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Extra 1</div>{{Extra 1}}\n      </div>\n    {{/Extra 1}}\n    {{#Extra 2}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Extra 2</div>{{Extra 2}}\n      </div>\n    {{/Extra 2}}\n  </div>\n</div>\n\n<script>\n// Toggle answer mask on clicking the image\nvar toggle = function() {\n  var amask = document.getElementById('io-overlay');\n  if (amask.style.display === 'block' || amask.style.display === '')\n    amask.style.display = 'none';\n  else\n    amask.style.display = 'block'\n}\n\n// Prevent original image from loading before mask\naFade = 50, qFade = 0;\nvar mask = document.querySelector('#io-overlay>img');\nfunction loaded() {\n    var original = document.querySelector('#io-original');\n    original.style.visibility = \"visible\";\n}\nif (mask === null || mask.complete) {\n    loaded();\n} else {\n    mask.addEventListener('load', loaded);\n}\n</script>\n{{/Image}}\n",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "IO Card",
                    "ord": 0,
                    "qfmt": "{{#Image}}\n<div id=\"io-header\">{{Header}}</div>\n<div id=\"io-wrapper\">\n  <div id=\"io-overlay\">{{Question Mask}}</div>\n  <div id=\"io-original\">{{Image}}</div>\n</div>\n<div id=\"io-footer\">{{Footer}}</div>\n\n<script>\n// Prevent original image from loading before mask\naFade = 50, qFade = 0;\nvar mask = document.querySelector('#io-overlay>img');\nfunction loaded() {\n    var original = document.querySelector('#io-original');\n    original.style.visibility = \"visible\";\n}\nif (mask === null || mask.complete) {\n    loaded();\n} else {\n    mask.addEventListener('load', loaded);\n}\n</script>\n{{/Image}}\n"
                }
            ],
            "type": 0,
            "vers": []
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}\n",
            "flds": [
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Front",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Back",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Basic",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [
                ""
            ],
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0,
            "vers": []
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}\n\n.cloze {\n font-weight: bold;\n color: blue;\n}\n.nightMode .cloze {\n color: lightblue;\n}",
            "flds": [
                {
                    "font": "Liberation Sans",
                    "media": [],
                    "name": "Text",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Extra",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Cloze",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [
                "",
                "robotics",
                ""
            ],
            "tmpls": [
                {
                    "afmt": "{{cloze:Text}}<br>\n{{Extra}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Cloze",
                    "ord": 0,
                    "qfmt": "{{cloze:Text}}"
                }
            ],
            "type": 1,
            "vers": []
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "112d5bc457df4c1c87cb36e9e6963aba-oa-1",
                "Cognitive Intelligent System",
                "<img src=\"intelligent_system.png\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-1-A.svg\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "hptpy7h4kd",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "introduction"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "112d5bc457df4c1c87cb36e9e6963aba-oa-2",
                "Cognitive Intelligent System",
                "<img src=\"intelligent_system.png\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-2-A.svg\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "dd,y%IN?7B",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "introduction"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "112d5bc457df4c1c87cb36e9e6963aba-oa-3",
                "Cognitive Intelligent System",
                "<img src=\"intelligent_system.png\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-3-A.svg\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "nqNp+cur4z",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "introduction"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "112d5bc457df4c1c87cb36e9e6963aba-oa-4",
                "Cognitive Intelligent System",
                "<img src=\"intelligent_system.png\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-4-A.svg\" />",
                "<img src=\"112d5bc457df4c1c87cb36e9e6963aba-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "D.fm2M</>K",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "introduction"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Reasons why AI is hard?",
                "* The world is ambiguous<div>* Communications is multimodal</div><div>* Learning must be done automatically</div>"
            ],
            "flags": 0,
            "guid": "Fj},1{Wh0+",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "introduction"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-1",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-1-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "JB;5wg_946",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-2",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-2-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "MA6&B;?ua:",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-3",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-3-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "ptFi:VcsF5",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-4",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-4-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "oL*h9C|V,v",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-5",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-5-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "sxVr{[wjC8",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-6",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-6-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-6-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "NhHBC@]52B",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-7",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-7-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-7-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "J&K0a|n%JL",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-8",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-8-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-8-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Cg^msWtMD?",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f399ffc3cf7490f9a866042099c82e3-oa-9",
                "Components of a speech recognizer",
                "<img src=\"Screenshot_20200709_205212.png\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-9-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-9-A.svg\" />",
                "<img src=\"9f399ffc3cf7490f9a866042099c82e3-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "r5g5vz#oS0",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Sampling",
                "Measure a Signal \\(f(x)\\) at multiple points \\(x\\)"
            ],
            "flags": 0,
            "guid": "KmGHLQ+)Ud",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "(Temporal) Aliasing",
                "Different signals become indistinguishable when sampled due to a low frequency of sampling<br><br>"
            ],
            "flags": 0,
            "guid": "nH0|/3aUp:",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Eliminating Aliasing",
                "* Increase Sampling frequency<div>* Band limiting with lowpass filter (Anti-Aliasing Filter)</div>"
            ],
            "flags": 0,
            "guid": "Ji4AqfLKrJ",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Quantization",
                "Quantization to discrete numbers instead of analogue levels<div><br></div><div>Number of Levels:<br>* Fine Resolution<br>* Dynamic Sampling</div>"
            ],
            "flags": 0,
            "guid": "kUg>}~.,Pc",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Dirac Function",
                "Defintion:<div>\\[\\int_{-\\infty}^{+\\infty} f(x) \\delta (x - x_0) dx = f(x_0)\\]</div><div><br></div><div>Has an area of 1, asymptotically small width</div><div><br></div><div><img src=\"paste-88d119bd882ac5f686111e2a34f98ca81f160d70.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": "GCr`m!49d)",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Definition continuous Convolution",
                "\\[(f * g)(t) = \\int_{-\\infty}^{+\\infty}f(t - \\tau)g(\\tau) d \\tau\\]"
            ],
            "flags": 0,
            "guid": "n[1u,Jy{6f",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Definition discrete Convolution",
                "\\[(f * g)[i] = \\sum_{j=-\\infty}^{+\\infty}f[i - j]g[j]\\]"
            ],
            "flags": 0,
            "guid": "IJHvu8h_.`",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Convolution of Time Functions<br>\\[F(f_1(t) * f_2(t)) =&nbsp;{{c1::F_1(\\omega) \\cdot F_2(\\omega)}}\\]",
                ""
            ],
            "flags": 0,
            "guid": "beI0?@-ko@",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Multiplication of Time Functions<br>\\[F(f_1(t) \\cdot f_2(t)) =&nbsp;{{c1::F_1(\\omega) * F_2(\\omega)}}\\]",
                ""
            ],
            "flags": 0,
            "guid": "E&~w+?lbQQ",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Filtering a signal",
                "A signal is filtered by multiplicating with a function"
            ],
            "flags": 0,
            "guid": "Oic,zJ]iE2",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Fourier Series Decomposition",
                "\\[c_k = \\frac{1}{2L} \\int_{-L}^L f(x) \\exp \\left(\\frac{-i \\pi k x}{L}\\right)dx\\]<div>\\[f(x) = \\sum_{k=-\\infty}^{+\\infty} c_k \\exp \\left(\\frac{i \\pi k x}{L} \\right)\\]</div>"
            ],
            "flags": 0,
            "guid": "A;j]w!?Alf",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Fourier Transform",
                "\\[\\mathcal{F}(f)(\\omega) = F(\\omega) = \\int_{-\\infty}^{+\\infty}&nbsp; f(t) \\exp (-i\\omega t) dt\\]"
            ],
            "flags": 0,
            "guid": "EPXFBY}JpZ",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Inverse Fourier Transform",
                "\\[\\mathcal{F}^{-1}(F)(t) = f(t) = \\frac{1}{2\\pi} \\int_{-\\infty}^{+\\infty}&nbsp; F(\\omega) \\exp (+i\\omega t) d\\omega\\]"
            ],
            "flags": 0,
            "guid": "pk~4;Z]&Q<",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Reelle Darstellung Fourrierreihe",
                "\\[f(x) = \\sum_{n=0}^\\infty a_n \\cos \\left(\\frac{2\\pi n x}{T} \\right) + b_n \\sin \\left(\\frac{2 \\pi n x}{T}\\right)\\]<div>Wobei:</div><div>\\[a_n = \\frac{1}{\\pi} \\int_{-\\pi}^{+\\pi} f(x) \\cdot \\cos (nx) dx = 0\\]</div><div>\\[b_n = \\frac{1}{\\pi} \\int_{-\\pi}^{+\\pi} f(x) \\cdot \\sin (nx) dx = 0\\]<br></div>"
            ],
            "flags": 0,
            "guid": "mJ%M?Y5xzs",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Properties of Fourier Transformation</u></b><div><br></div><div>{{c1::<b>Linearity</b></div><div>\\[\\mathcal{F}(c_1 f_1 + c_2 f_2) = c_1 \\mathcal{F}(f_1) +&nbsp; c_2 \\mathcal{F}(f_2)\\]</div>}}<div><br></div><div>{{c2::</div><div><b> Differentiation</b></div><div>\\[\\mathcal{F}(f^{(n)}) = (i \\omega)^n \\mathcal{F}(f)\\]</div>}}<div><br></div><div>{{c3::</div><div><b>Time Shift</b></div><div>\\[\\mathcal{F}(f(t - T)) = e^{- i \\omega T} \\mathcal{F}(f)\\]</div>}}<div><br></div><div>{{c4::</div><div><b>Frequency Shift</b></div><div>\\[\\mathcal{F}(e^{i \\omega_0 t} f(t)) = F(\\omega - \\omega_0)\\]</div>}}",
                "<div><div><br></div></div>"
            ],
            "flags": 0,
            "guid": "N-pp8Ek++f",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<table class=\"table_class_basic_full_width\" style=\"font-size: 85%; width: 100%; border-collapse: collapse; border: 1px solid black;\">\n                <thead><tr><th style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">Zusammenhänge Funktion</th><th style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">Transformierte</th></tr></thead>\n                <tbody><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c2::Periodisch}}</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Diskret}}</td></tr><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c2::Diskret}}</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Periodisch}}</td></tr><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c2::Reell}}</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Gerade}}</td></tr><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c2::Imaginär}}</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Ungerade}}</td></tr></tbody></table>",
                ""
            ],
            "flags": 0,
            "guid": "B5P)CZ`/8:",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Sampling Theorem",
                "\\[\\Delta x &lt; \\frac{1}{2\\omega}\\]<div><br></div><div>Sample Frequency has to be larger than twice the highest frequency components in the signal</div><div><br></div><div>If the sampling theorem is observed, a signal can be reconstructed with the inverse fourier and no aliasing happens</div>"
            ],
            "flags": 0,
            "guid": "gtfEco4lk%",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b>Typical Fourier Transforms</b><div><br></div><div><table class=\"table_class_basic_full_width\" style=\"font-size: 85%; width: 100%; border-collapse: collapse; border: 1px solid black;\">\n                <thead><tr><th style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">\\(f(t)\\)</th><th style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">\\(F(\\omega)\\)</th></tr></thead>\n                <tbody><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">\\(e^{i \\alpha t}\\)</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::\\(\\delta (\\omega - \\alpha)\\)}}</td></tr><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">\\(A\\ sin(2\\pi\\alpha t)\\)</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c2::\\(\\frac{A}{2}i\\delta(\\omega + \\alpha) - \\frac{A}{2}i\\delta(\\omega - \\alpha)\\)}}</td></tr><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">\\(A\\ cos(2\\pi\\alpha t)\\)</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c3::\\(\\frac{A}{2}\\delta(\\omega + \\alpha) + \\frac{A}{2}\\delta(\\omega - \\alpha)\\)}}</td></tr><tr><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">\\(\\sum^\\infty_{n=-\\infty}\\delta(t - nT)\\)</td><td style=\"width:50%; text-align:center; padding: 2px; border: 1px solid black;\">{{c4::\\(\\frac{1}{T}\\sum^\\infty_{n=-\\infty}\\delta(\\omega - \\frac{n}{T})\\)}}</td></tr></tbody></table></div>",
                ""
            ],
            "flags": 0,
            "guid": "fuJg-?L2i@",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Discrete Fourier Transform",
                "\\[F[\\omega] = \\frac{1}{N} \\sum_{k=0}^{N-1} f[k] \\exp (-i 2 \\pi \\frac{k}{N} \\omega)\\]<div><br></div>"
            ],
            "flags": 0,
            "guid": "QSM>uAt9AV",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<div>Inverse Discrete Fourier Transform</div>",
                "\\[f[k] = \\sum_{\\omega =0}^{N-1} F[\\omega] \\exp (+i 2 \\pi \\frac{\\omega}{N} k)\\]<div><br></div>"
            ],
            "flags": 0,
            "guid": "o[Eo=ELc)Y",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Windowing",
                "Use a windowing function that only keeps a fix window of the signal<div><br></div><div>\\[s(x) = f(x) \\cdot w(x)\\]</div><div>\\[w(x) = \\begin{cases}1 &amp; x \\in [t_1, t_2]\\\\0 &amp; \\text{otherwise}\\end{cases}\\]</div>"
            ],
            "flags": 0,
            "guid": "I&ltI8#SXV",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "signal_processing"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "One-Dimensional Cross Correlation",
                "\\[R_{f,g}(m) = \\sum_i f(i)g(i-m)\\]"
            ],
            "flags": 0,
            "guid": "|L)0jys2(",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Two-Dimensional Cross Correlation",
                "\\[R_{f,g}(m, n) = \\sum_i \\sum_j f(i, j)g(i-m, j-n)\\]"
            ],
            "flags": 0,
            "guid": "p$LYrwbL#x",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Classification",
                "Categorize / Identify Objects/Signals in the world"
            ],
            "flags": 0,
            "guid": "Qn0;YK6%:/",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Template Matching",
                "Simple Classifier<div><br>Idea: Recognize a Pattern that is similar to a stored template</div><div><br></div><div>Measure of Similarity:</div><div>\\[M_{f, g}(m, n) = \\sum_i \\sum_j f(i, j) g(i - m, j - n)\\]</div>"
            ],
            "flags": 0,
            "guid": "k3I|TG1^g^",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Time Warping",
                "Normalize Axes non-linearly<div><img src=\"paste-f60ab7907065f1346ad274dadb1808a91bbe3745.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": "GfA2I8>7ZY",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Supervised Training vs. Unsupervised Training",
                "Supervised: Label of class is known<div>Unsupervised: Class ist not known and needs to be infered automatically</div>"
            ],
            "flags": 0,
            "guid": "c?]^;?^QZ@",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Parametric vs. Non-Parametric",
                "Parametric: Assume underlying probability distribution and estimate parameters<br>Non-Parametric: Don't assume distribution"
            ],
            "flags": 0,
            "guid": "xb)WK;h^hB",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Linear vs. Non-Linear",
                "Linear: Classifier divides classes by linear hyperplane<br>Non-Linear: Classifier divides classes not necessary by hyperplane"
            ],
            "flags": 0,
            "guid": "yR!/S%Ex0`",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-1",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-1-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "ld6v/q.=aT",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-2",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-2-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "DAAZg?<y~h",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-3",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-3-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "J|H6^ESTl5",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-4",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-4-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "srNVo}{^NZ",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-5",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-5-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Iix.3q)y1.",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-6",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-6-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-6-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "u*YQ`))up0",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-7",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-7-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-7-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Fh&%<QW6O{",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "414719e53afd4dfb8092ebad7fd169b0-oa-8",
                "Pattern Recognition Classes",
                "<img src=\"tmpmrb_1cg7.png\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-8-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-8-A.svg\" />",
                "<img src=\"414719e53afd4dfb8092ebad7fd169b0-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "m;x>0qdEAn",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Bayes Rule",
                "\\[P(\\omega_j | x) = \\frac{P(x | w_j) P(w_j)}{P(x)}\\]<div><br></div><div>with</div><div>\\[P(x) = \\sum_i P(x | w_i) P(w_i)\\]<br></div>"
            ],
            "flags": 0,
            "guid": "yf8@cHYmGJ",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<div>A Priori Probability</div>",
                "<div>\\[P(w_j)\\] Probability that we observe the class \\(w_j\\)<br></div>"
            ],
            "flags": 0,
            "guid": "f!Cu%f8?Z-",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "A Posteriori Probability",
                "\\[P(w_j | x)\\] Probability that we observe the class \\(w_j\\) when we observed \\(x\\)"
            ],
            "flags": 0,
            "guid": "yjkS0j!ujV",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Class-conditional probability density",
                "\\[P(x | w_j)\\] Probability of observing \\(x\\) in class \\(w_j\\)"
            ],
            "flags": 0,
            "guid": "MPIy~pu|t]",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Naive Bayes Classifier",
                "Classifies objects according to the rule of bayes to the class with the highest probability"
            ],
            "flags": 0,
            "guid": "v&ithp_cHC",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Gauss Classifier",
                "Parametric classifier on normal distributions<div>Does not always model the situation well</div>"
            ],
            "flags": 0,
            "guid": "f|>ZbIP7)R",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Maximum Likelihood Method",
                "Method for guessing mean and variance<div>\\[\\mu = \\frac{1}{n} \\sum_{i=1}^n x_i,\\ \\sigma^2 = \\frac{1}{n} \\sum_{i=1}^n (x_i - \\mu)^2\\]</div>"
            ],
            "flags": 0,
            "guid": "dZY$Y3pA&/",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Parzen Windows",
                "Non-Parametric<br>Count number of samples in Volume<br>\\[P(x) \\approx \\frac{k/n}{V}\\]<br><br>Good Volume<br>\\[V_n = \\frac{1}{\\sqrt{n}}\\]<div><br></div><div><img src=\"paste-11d4391d8e7fd28be496f8b54683a4519de6cbea.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": "dcOVgn}b`_",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "K-Nearest Neighbor (KNN)",
                "Parzen Window, but have Volume as function of data<br><br>Classify with \\(k=\\sqrt{n}\\)<br><br>1. Find k-nearest nieghbors of x<div>2. Determine the class most frequently represented among those k samples<br>3. Assign x to that class</div>"
            ],
            "flags": 0,
            "guid": "OPSZV9]>DQ",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Risk",
                "Expected loss of taking action \\(\\alpha_i\\)<br><br>\\[R(\\alpha_i | \\vec x) = \\sum_{j=1}^s \\lambda (\\alpha_i | \\omega_j) P(\\omega_j|\\vec x)\\]"
            ],
            "flags": 0,
            "guid": "KH,Wv;NG|-",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Curse of Dimensionality",
                "Adding new feature (dimension) worsens the performance, due to the limited amount of training data"
            ],
            "flags": 0,
            "guid": "l/LC+!;G-o",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Linear Disciminant Function",
                "Non-Parametric<br><br>Use function for linear decision surface<br><br>\\[g(x) = w_0 + \\sum_{i=1}^n w_i x_i = 1\\]<br><br>Two category case:<div>\\[g(x) \\ge 0 \\Rightarrow \\text{class } 1\\]</div><div>\\[g(x) &lt; 0 \\Rightarrow \\text{class } 2\\]<br></div>"
            ],
            "flags": 0,
            "guid": "Q#5$+Q<-;o",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Fisher-Linear Discriminant",
                "* Dimensionality Reduction<br>* Project multidimensional points onto a line \\(y = \\vec w \\vec x\\)<br>* Maximize Criterion<br>\\[g(x) = \\frac{| \\tilde m_1 - \\tilde m_2|}{\\tilde s_1 + \\tilde s_2}\\]<br><br>"
            ],
            "flags": 0,
            "guid": "dW#=z8M8/L",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Mixture Gaussians",
                "Model distribution with several Gaussians<br><br><div><img src=\"paste-c8badbc7d283e6e9670386875518a7e65c9f1adb.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": ":4c)#?grp",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Clustering",
                "Samples in same class should form a cluster<br>Extremize criterion function<br>\\[J = \\sum_{i=1}^c \\sum_{max} ||x - m_i||^2\\]"
            ],
            "flags": 0,
            "guid": "y!t!b<>}{F",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Hierarchical Clustering</u></b><div><br></div><div>Advantage: {{c1::No determining of number of clusters / initial means}}<br>1. {{c2::Initialize \\(c := n\\)}}<div>2. {{c3::Find nearest pair of distinct clusters \\(x_i\\) and \\(x_j\\)}}<br>3. {{c4::Merge them and decrement \\(c\\)}}</div><div>4. {{c5::If \\(c \\le C_{\\text{stop} }\\) stop, otherwise goto step 2}}</div></div>",
                ""
            ],
            "flags": 0,
            "guid": "pj)D#PBLC}",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "classification"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Perceptron",
                "Model simulating the perception in the brain<br><br>Decision Function:<div>\\[g(\\vec x) = \\sum_{i=1}^n w_i x_i + w_0 = \\vec w^T \\vec x + w_0\\]<br><br>Features: \\(\\vec x\\)</div><div>Weights: \\(\\vec w\\)<br>Threshold weight: \\(w_0\\)<br></div><div><br></div><div>Class 1 (2) depending on \\(&gt; 0 (&lt; 0)\\)</div>"
            ],
            "flags": 0,
            "guid": "t2Xw?l@G7I",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Perceptron Weight Update",
                "Criterion Function<div>\\[J_P (\\vec w) = \\sum_{\\vec x \\in X} - \\vec w \\cdot \\vec x\\]</div><div><br></div><div>Update</div><div>\\[\\nabla J_P = \\sum_{\\vec x \\in X} - \\vec x\\]</div><div>\\[\\vec w_{k+1} = \\vec w_k + \\varsigma_k \\sum_{\\vec x \\in X} \\vec x\\]</div>"
            ],
            "flags": 0,
            "guid": "q4+]HE|@Mf",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Perceptron Problems",
                "How to set the learning rate?<br>How to set initial weights?<br><br>* Only linear decision surface -&gt; XOR<br><br>"
            ],
            "flags": 0,
            "guid": "dBd.{aqJ?o",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Von Neumann&nbsp; Computer vs. Neural Computation</u></b><div><br></div><div><table class=\"table_class_basic_full_width\" style=\"font-size: 85%; width: 100%; border-collapse: collapse; border: 1px solid black;\">\n                <thead><tr><th style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Type</th><th style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Von Neumann</th><th style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Neural Computation</th></tr></thead>\n                <tbody><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Processing</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Sequential</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Parallel}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Processors</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">One</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Many}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Interaction</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">None</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::A lot}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Communication</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Poor</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Rich}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Processors</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Fast, Accurate</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Slow, Sloppy}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Knowledge</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Local</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Distributed}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Hardware</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">General Purpose</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Dedicated}}</td></tr><tr><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Design</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">Programed</td><td style=\"width:33%; text-align:center; padding: 2px; border: 1px solid black;\">{{c1::Learned}}</td></tr></tbody></table></div>",
                ""
            ],
            "flags": 0,
            "guid": "dzKxw[,=D)",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Multi-Layer Perceptron",
                "Many connected Perceptrons<br><br>\\[x_j = \\sum_i y_i w_{ij}\\]<br>\\[y_j = \\frac{1}{1 + e^{-x_j} }\\]<div><br></div><div><img src=\"paste-28b75a7cfe625f31e998def00989b4077d7f1b24.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": "NU&*:3%;*i",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Backpropagation of Error",
                "<img src=\"paste-40755e7be985b472193e9eebb8297ca30d604f7f.jpg\">"
            ],
            "flags": 0,
            "guid": "pazRXJ,iTB",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Sigmoid</u></b><div><br></div><div><b>Function</b></div><div>{{c1::\\[y_j = \\frac{1}{1 + e^{-x_j} }\\]}}<br><br><b>Derivative</b><br>{{c2::\\[\\frac{\\partial y_j}{\\partial x_j} = y_j (1 - y_j)\\]}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "q?#jn}{NnS",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Bottleneck Layer",
                "Add small layer to force network to learn expressive features<div><br></div><div><img src=\"paste-066676f2d20a4908a116851f9a3db6c936261916.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": "rxnI)YJhVM",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "MLP as Autoencoder",
                "Train MLP to reproduce it input<br>Use the hidden Representation<br><br><img src=\"paste-ba1e64dd3e577c17e06eade2412e880fa1389ad9.jpg\"><br>"
            ],
            "flags": 0,
            "guid": "sbw8<:O.23",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Neural Net Design Criteria",
                "* Error Rate<br>* Training Time<br>* Recognition Time<br>* Memory Requirements<br>* Training Complexity<br>* Ease of Implementation<br>* Ease of Adaption"
            ],
            "flags": 0,
            "guid": "n4Po|0SQx`",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Overfitting",
                "Model is memorizing training data<br>Prevents generalization<br><br><img src=\"paste-224fc1676b6f1f41e098abf57e89dce45c3e2d78.jpg\"><br>"
            ],
            "flags": 0,
            "guid": "c5tS;/9e^.",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Reasons for bad generalization",
                "1. Overfitting / Overtraining<br>2. Too little training material<br>3. Too many parameters / Inappropriate network architecture"
            ],
            "flags": 0,
            "guid": "fD.G/H8.,/",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Time-Delay Neural Networks (TDNN)",
                "Multilayer Neural Network - Nonlinear Classifier<br><br>* Consider Context (Receptive Field)<br>* Shift-Invariant Learning<br>* Units learn patterns independent of location in Time<div><br></div><div><img src=\"paste-85c0692675f6fca531f16916d4d1d9b1057c68de.jpg\"><br></div>"
            ],
            "flags": 0,
            "guid": "MLMLx&ofEh",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "Advanced Neural Models",
                "* Time-Delay Neural Networks<br>* Recurrent Nets<br>* Higher Order Nets<br>* Modular System Construction<br>* Adaptive Architectures"
            ],
            "flags": 0,
            "guid": "OXO.Z1V8@h",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "machine_learning"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "c4ae4c295de24035a03d8385d8b8ba0c-oa-1",
                "Speech Production",
                "<img src=\"tmpoif1tql0.png\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-1-A.svg\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "v-dv+?9#ZA",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "c4ae4c295de24035a03d8385d8b8ba0c-oa-2",
                "Speech Production",
                "<img src=\"tmpoif1tql0.png\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-2-A.svg\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "B=wqNV6;f.",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "c4ae4c295de24035a03d8385d8b8ba0c-oa-3",
                "Speech Production",
                "<img src=\"tmpoif1tql0.png\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-3-A.svg\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Nwv(*{Uc~:",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "c4ae4c295de24035a03d8385d8b8ba0c-oa-4",
                "Speech Production",
                "<img src=\"tmpoif1tql0.png\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-4-A.svg\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "m@C_}T4&3b",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "c4ae4c295de24035a03d8385d8b8ba0c-oa-5",
                "Speech Production",
                "<img src=\"tmpoif1tql0.png\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-5-A.svg\" />",
                "<img src=\"c4ae4c295de24035a03d8385d8b8ba0c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "x*J3Me|E&u",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "The {{c2::<b>resonance frequencies</b>}} of the vocal tract transfer function are called {{c1::<b>formants</b>}}.<div><img src=\"paste-9c6b98dbf83f1c0bddf92f099fe015e04db121d6.png\"><br></div>",
                "In practice only the first few formants are of interest"
            ],
            "flags": 0,
            "guid": "G$3GWS0d)r",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "{{c1::Consonants}}<b>&nbsp;</b>are sounds which are articulated by {{c2::temporarily constricting or stopping the airflow completely}}<div><img src=\"paste-410656846ea53ea88449c3efecbf134dcbc3173f.png\"><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "wk.^o8FZ]9",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "A {{c1::<b>spectrogram</b>}}&nbsp;is a visual representation of the {{c2::spectrum&nbsp;of frequencies}}&nbsp;of a signal as it varies with time<div><br></div><div><img src=\"paste-56aab2219fae9f1c26ffc9ae602ed8085fb0413a.png\"><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "gcC(WMJ@u",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "The <b>mel scale</b>&nbsp;is a {{c1::perceptual scale of pitches}} judged by listeners to be {{c2::equal in distance from one another.}}",
                "<img src=\"paste-3df9bb6796a2f9513c7d64199ee626dd1a21b7f0.png\">"
            ],
            "flags": 0,
            "guid": "jPkN/uTOVK",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<u style=\"font-weight: bold;\">Speech / Language is Compositional</u><br><br>{{c1::Characters}}: HAPPY<br>{{c2::Phoneme}}: / 'hæpi/<div>{{c3::Syllable}}: / 'hæ- /</div><div>{{c4::Morpheme}}: un+happy+ness</div><div>{{c5::Word}}: happy</div><div>{{c6::Phrase}}: a happy student</div><div>{{c7::Clause}}: I was a happy student</div><div>{{c8::Sentences}}: I was a happy student, who went to school</div><div>{{c9::Dialog}}: \"Were you a happy student?\" \"Yes I was\"</div><div>Stories, Schemata, Narrative,...</div>",
                ""
            ],
            "flags": 0,
            "guid": "G0t[bk9FN:",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>HMM - Problems and Solutions</u></b><div><b><u><br></u></b></div><div><i>Problem</i>: Compute Probability of Observation Sequence given a model</div><div><i>Solution</i>: {{c1::<b>Forward Algorithm </b>and <b>Viterbi Algorithm</b>}}</div><div><br></div><div><div><i>Problem</i>: Find state sequence which maximizes probability of observation sequence</div><div><i>Solution</i>: {{c2::<b>Viterbi Algorithm</b>}}</div></div><div><br></div><div><div><i>Problem</i>: Adjust model parameters to maximize probability of observed sequences</div><div><i>Solution</i>: {{c3::<b>Forward-Backward Algorithm</b>}}</div></div>",
                ""
            ],
            "flags": 0,
            "guid": "OrL)Ew-3xM",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "hmm"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Hidden Markov Model</u></b><div><b><u><br></u></b></div><div>A <b>Hidden Markov Model (HMM) </b>is a Tuple \\(\\lambda = (S, V, A, B, \\pi)\\)</div><div><br></div><div>{{c1::States}} \\(S\\)</div><div><br></div><div>{{c2::Symbol alphabet}} \\(V\\) with \\(M\\) Symbols or continuous output space</div><div><br></div><div>{{c3::Transition probabilities}} \\(A = (a_{ij}, a_{ij} = {{c3::P(q_{t+1} = S_j | q_t = S_i)}}\\)</div><div><br>{{c4::Output distribution}}&nbsp;\\(B = \\{b_j (k) \\}, b_j (k) = {{c4::P(v_k|q_t = S_j)}}, 1 \\leq j \\leq N, 1 \\leq k \\leq m\\)</div><div><br>{{c5::Intial distribution}}&nbsp;\\(\\Pi = \\{\\pi_i\\}, \\pi_i = P(q_1 = S_i), 1 \\leq i \\leq N\\)</div>",
                ""
            ],
            "flags": 0,
            "guid": "uy~BZIJ/,[",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "hmm"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Forward Algorithm</u></b><div><b><u><br></u></b></div><div>Calculate recursively Trellis \\(\\alpha_T (j)\\), the probability observing \\(O\\) and finishing in State \\(s_j\\):<br><br>\\[P(O|\\lambda) = {{c1::\\sum_{j=1}^N P(O, q_T = s_j | \\lambda)}}, \\alpha_T (j) := {{c2::P(O, q_T = s_j | \\lambda)}}\\]</div><div><br></div><div><b>Graphically:</b></div><div>1. {{c3::Draw Grid of Blocks, Row number is the number of States}}</div><div>2. {{c4::First Column contains the initial probabilities for each cell}}</div><div>3. {{c5::</div><div>Cells of next column are calculated through transitions from cells before and the output probabily of the cells</div><div>* Multiply probability of cells before with transition probability to new cell</div><div>* Sum these transitions with output probability</div>}}<div>4. Redo step 3. until searched probability is reached</div><div><b><br></b></div>",
                ""
            ],
            "flags": 0,
            "guid": "jqUVUG4H1K",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "hmm"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Backward Algorithm</u></b><div><b><u><br></u></b></div><div>Define: \\(\\beta_t (j) := {{c1::P(o_{t+1}, o_{t+1}, \\ldots, o_T, q_t = j | \\lambda)}}\\)<br>Init: \\(\\lambda_T (i) = {{c2::1\\ \\forall i}}\\)</div><div>Induction: \\(\\beta_t (i) = {{c3::\\sum_{j=1}^N a_{ij} b_j o_{t+1} \\beta_{t + 1} (j)}}\\)</div><div>Summarize: \\(P(O|\\lambda) = {{c4::\\sum_{i=1}^N \\beta_0(i)}}\\)</div>",
                ""
            ],
            "flags": 0,
            "guid": "KXn%`vY6={",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "hmm"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Viterbi Algorithm</u></b><div><b><u><br></u></b></div><div>Find the path {{c1::with the highest probability}} in graphical solution of forward algorithm.</div>",
                ""
            ],
            "flags": 0,
            "guid": "kr(h{-|*?)",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "hmm"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Model Topologies</u></b><div><b><u><br></u></b></div><div>{{c1::Ergodic}}<b>&nbsp;</b>- Fully connected each state has transition to every other state</div><div>{{c3::<img src=\"paste-f9f4bba946b4d6d3f166ea19e468335e780bc594.png\">}}<br></div><div><br></div><div>{{c2::Left-To-Right}}- Transitions only to states with higher index than current state. Inherently impose temporal order. These are most often used for speech</div><div><br></div><div>{{c4::<img src=\"paste-115187d726a1d0d7ca6c65c7f8ce040677d88004.png\">}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "tzdP-Ccq$H",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "hmm"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "56ae59f5a87446a497b113f3fa2fa19c-oa-1",
                "TDNN Model",
                "<img src=\"tmp30a62sgr.png\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-1-A.svg\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "jt-VGuiLDJ",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "advanced_neural_models"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "56ae59f5a87446a497b113f3fa2fa19c-oa-2",
                "TDNN Model",
                "<img src=\"tmp30a62sgr.png\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-2-A.svg\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "w}aPA3s=$W",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "advanced_neural_models"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "56ae59f5a87446a497b113f3fa2fa19c-oa-3",
                "TDNN Model",
                "<img src=\"tmp30a62sgr.png\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-3-A.svg\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "c.$}V;}7#W",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "advanced_neural_models"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "56ae59f5a87446a497b113f3fa2fa19c-oa-4",
                "TDNN Model",
                "<img src=\"tmp30a62sgr.png\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-4-A.svg\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "P#s6J(yZxw",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "advanced_neural_models"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "56ae59f5a87446a497b113f3fa2fa19c-oa-5",
                "TDNN Model",
                "<img src=\"tmp30a62sgr.png\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-5-A.svg\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "d!mk/1nhE^",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "advanced_neural_models"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "56ae59f5a87446a497b113f3fa2fa19c-oa-6",
                "TDNN Model",
                "<img src=\"tmp30a62sgr.png\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-6-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-6-A.svg\" />",
                "<img src=\"56ae59f5a87446a497b113f3fa2fa19c-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "brr*)Wwx=8",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "advanced_neural_models"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "d660b055d21142ee8888c377dd8578bd-oa-1",
                "Possible Solutions to estimate Emission Probabilities",
                "<img src=\"tmp0foyso_a.png\" />",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-1-A.svg\" />",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "q2V/~=>(vW",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "d660b055d21142ee8888c377dd8578bd-oa-2",
                "Possible Solutions to estimate Emission Probabilities",
                "<img src=\"tmp0foyso_a.png\" />",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-2-A.svg\" />",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "zn6vts/teQ",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "d660b055d21142ee8888c377dd8578bd-oa-3",
                "Possible Solutions to estimate Emission Probabilities",
                "<img src=\"tmp0foyso_a.png\" />",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-3-A.svg\" />",
                "<img src=\"d660b055d21142ee8888c377dd8578bd-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "r+I6=+}ZQ/",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>HMM - Context</u></b><div><b><u><br></u></b></div><div><b>Advantages:</b></div><div>{{c1::* Model Sequences<div>* Integrated Training}}</div></div><div><b><br></b></div><div><b>Disadvantages:</b><br>{{c2::* Markov Assumption: Not independent from past<div>* Higher Order Markov Models difficult to compute</div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "yS/O>vUh<4",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "There are multiple types of <b>dictionaries </b>in speech recognition:<br>1. {{c1::Word dictionaries}}<div>2. {{c2::Phonetic dictionaries}}</div><div>3. {{c3::Tree-Structured dictionaries}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "lq$-,.,}iE",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<u style=\"font-weight: bold;\">Language Models: Grammar based</u><br><br><b>Idea</b><br>{{c1::Write the Grammar of possible sentences}}<div><br></div><div><b>Advantages</b></div><div>* {{c2::Long History / Context}}</div><div>* {{c2::Don't need large text database}}<br><br><b>Disadvantages</b></div><div><sup>*&nbsp;</sup>{{c3::Write Grammars manually}}</div><div><sup>*&nbsp;</sup>{{c3::Only programmed patterns can be recognized}}</div>",
                "<img src=\"paste-92f5224dd6ecd186a1be27b7c4ff3f335918604e.png\">"
            ],
            "flags": 0,
            "guid": "PCJ&~Rgcgn",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "language_models",
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Language Models: N-Grams</u></b><div><b><u><br></u></b></div><div><b>Idea:</b></div><div>{{c1::Predict next word based on history. History is approximated by two/three/n past words}}</div><div><br></div><div><b>Advantages:</b></div><div>* {{c2::Trainable on large text database}}</div><div>* {{c2::Prediction is soft (probabilities)}}</div><div>* {{c2::Can be combined with accoustic model}}</div><div><br></div><div><b>Disadvantages:</b><br>* {{c3::Need large text database for each domain}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "tE[(dAmnEM",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "language_models",
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<u><b>Perplexity of a Language Model</b></u><div><u><br></u></div><div><b>Perplexity</b> is a measurement of how well a probability model predicts a sample.</div><div>A {{c1::l<b>ow</b> \n<b>perplexity</b>}}&nbsp;indicates the probability distribution is good at predicting \nthe sample.<u><br></u></div><div><br></div><div>\\[\\mathit{PP}(p) = {{c2::2^{H(p)} = 2^{-\\sum_x p(x) \\log_2 p(x)} }}\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "x`rQk<rq(t",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "language_models",
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Word Error Rate</u></b><div><b><u><br></u></b></div><div>The <b>word error rate</b> is calculated using the {{c1::needed insertions, deletions and subtitions}}.</div><div><br></div><div>\\[\\mathit{WER} = {{c1::\\frac{|Ins| + |Del| + |Sub|}{N} }}\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "D=p%j+{eqq",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "speech"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "13f0da2abae74af5a41312382f394c8b-oa-1",
                "Approaches for language translation",
                "<img src=\"tmp7nypx6dh.png\" />",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-1-A.svg\" />",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "i8sdVI}+5M",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "nlp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "13f0da2abae74af5a41312382f394c8b-oa-2",
                "Approaches for language translation",
                "<img src=\"tmp7nypx6dh.png\" />",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-2-A.svg\" />",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "MC;|)(><Q1",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "nlp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "13f0da2abae74af5a41312382f394c8b-oa-3",
                "Approaches for language translation",
                "<img src=\"tmp7nypx6dh.png\" />",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-3-A.svg\" />",
                "<img src=\"13f0da2abae74af5a41312382f394c8b-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "CMP2_$V!Ff",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "nlp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Interlingua Approach</u></b><div><b><br></b></div><div>Translate via interlingua representation<br><div><b><u><br></u></b></div><div><b>Advantages</b></div><div>* {{c1::Need only \\(N\\) parser/generators instead of \\(N^2\\)}}</div><div>* {{c1::Rapid addition of new languages}}</div></div><div>* {{c1::Clean up language}}</div><div>* {{c1::Generate culturally / contextually appropriate translation}}</div><div><br></div><div><b>Disadvantages</b></div><div><b>* </b>{{c2::Hard to programm by linguistic analysis}}</div><div><br></div>",
                "<img src=\"paste-9eacdf50bf28e81391330d773616ec61661854a4.png\">"
            ],
            "flags": 0,
            "guid": "KHX,Gc>q4[",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "nlp*Con"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "An {{c1::<b>Alignment</b>}}<b>&nbsp; </b>\\(a\\)&nbsp;is a set of pairs \\((i, k)\\) of connections between k-th word in target language and i-th word in source language.",
                "<img src=\"paste-43bfc0dce773f892075f3286ccb57b450049ccb5.png\">"
            ],
            "flags": 0,
            "guid": "Q;j{N9JSX|",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "nlp*ConSand"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "An intelligent agent is a {{c1::rational decision maker}}<b>&nbsp;</b>who is able to {{c1::perceive}}&nbsp;some external environment and act {{c1::autonomously}}&nbsp;upon it",
                ""
            ],
            "flags": 0,
            "guid": "fyn|JGF45=",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b>Rationality </b>means {{c1::optimizing a performance measure}}",
                ""
            ],
            "flags": 0,
            "guid": "k?E?3F46oq",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "An <b>autonomous agent </b>perceives i{{c1::ts environment with <i>sensors</i>}}&nbsp;and {{c2::<i>acts</i>&nbsp;on environment using <i>actuators.</i>}}",
                "<img src=\"paste-669745fddab32d2649b5cfaa3ef9e9aabbc6e7aa.png\">"
            ],
            "flags": 0,
            "guid": "xY:9@l`^aG",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "A {{c1::rational agent}}&nbsp;chooses actions that {{c2::<b>maximize</b>&nbsp;its expected <b>utility</b>}}",
                "<img src=\"paste-ac3365fe8f960ca387efb1228a4c853e32c9ab51.png\">"
            ],
            "flags": 0,
            "guid": "Afi*j*$RBE",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Reflex Agents</u></b><div><br></div><div>* Choose action based <b>on&nbsp;</b>{{c2::current percept}}</div><div>* May have memory or model of current state</div><div>* Do {{c1::<b>not consider</b>&nbsp;the <b>future</b>&nbsp;consequences}}&nbsp;of their actions</div><div>* Consider how the world IS</div>",
                "<img src=\"paste-2542023b0c35802e266c1bc607b32702d3ae88d9.png\">"
            ],
            "flags": 0,
            "guid": "Py6l&1;)=R",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<u style=\"font-weight: bold;\">Planning Agents</u><br><br>* Ask \"what if?\"<br>* Decisions based on {{c1::(hypothesized) <b>consequences of actions</b>}}<div>* Must have a model of how the world evolves</div><div>* Must formulate {{c2::a <b>goal</b>}}</div><div>* Consider how the world WOULD BE</div>",
                "<img src=\"paste-777cf2e547580abe8db8cc05621326425a023f23.png\">"
            ],
            "flags": 0,
            "guid": "nj}/m9Ta>a",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Search Problems</u></b><div><b><u><br></u></b></div><div>Consist of:</div><div>* {{c3::A state space}}</div><div>* {{c4::A sucessor function}}<br>* {{c5::A start state and <b>a goal test</b>}}</div><div><br></div><div>A {{c2::solution}}&nbsp;is a {{c1::<b>sequence of actions</b> which transform the start state to a goal state}}</div>",
                "Example Travelling in Romania:<br><img src=\"paste-62fadffd85e766411559ccb3fa2dc6075fdf42a1.png\"><br><br>State space: Cities<div>Sucessor function: Roads<br>Start state: Arad</div><div>Goal test: Is state == Bucharest?<br>Solution?</div>"
            ],
            "flags": 0,
            "guid": "k#3m[QtjRu",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b>State space graph: </b>A mathematical representation of a search problem<div>* Nodes are {{c1::world configurations}}</div><div>* Edges represent {{c1::sucessors}}</div><div>* Goal test is a {{c1::set of goal nodes}}</div><div>* Each state {{c1::occurs only once}}</div>",
                "The full graph is to big most of the time!<div><img src=\"paste-57413c8a2931a2c12f75eb3281b7e99add196199.png\"><br></div>"
            ],
            "flags": 0,
            "guid": "y#/B1RM[Ok",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Search Tree</u></b><div><br></div><div>A \"what if\" tree of plans and their outcomes<div>* The root node is {{c1::the start state}}</div><div>* Children correspond to {{c1::successors}}</div><div>* Nodes show {{c1::states}}, but correspond to {{c1::PLANS}}</div><div><br>For most problems, we can never actually build the whole tree!</div></div>",
                "<img src=\"paste-1c4547a12f7f689e2cb0c4f3c121fb250f275429.png\">"
            ],
            "flags": 0,
            "guid": "kwq1T,vTB9",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "The <b>fringe </b>are {{c1::\"border\" nodes of partial plans under considerations}}",
                "<img src=\"paste-43e616e35dfd09c0f7454bb0411a2177cee9eb94.png\">"
            ],
            "flags": 0,
            "guid": "BD52BuTfvW",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "General Tree Search",
                "<img src=\"paste-f6001f0a84beca637268bc93f43b5e336b33b81e.png\">"
            ],
            "flags": 0,
            "guid": "N&eTrKwPRZ",
            "note_model_uuid": "82540bfe-8ee0-11ea-9b8a-4494fca6223c",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b>A heuristic \\(h(x)\\)</b>:<div>* A function that {{c1::<i>estimates </i>how close a state is to a goal}}</div><div>* Designed for a particular search problem</div><div>* Examples: {{c2::Manhatten distance, euclidean distance}}</div>",
                "<img src=\"paste-876b09246aef7d6fe5f88ae1fcb3e0e8f4d4aa29.png\">"
            ],
            "flags": 0,
            "guid": "d7xAl^0W`I",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b style=\"text-decoration-line: underline;\">Greedy Search</b><br><br><b>Strategy:</b><br>{{c1::Expand a node that you think is closest to a goal state}}<div><br></div><div><b>Heuristic:</b></div><div>{{c2::Estimate of distance to nearest goal for each state}}</div><div><br></div><div><b>Worst-case:</b></div><div>{{c3::A badly-guided DFS}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "AHmyKyUy~[",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Search Algorithm Properties</u></b><div><b><u><br></u></b></div><div><b>Complete</b>: {{c1::Guaranteed to find a solution if one exists?}}<br><b>Optimal: </b>{{c2::Guaranteed to find the least cost path?}}</div><div><b>Time complexity?</b></div><div><b>Space complexity?</b></div><div><b><br></b></div><div><img src=\"paste-c0e2e55b2cc68def84367aa5d4a0e3a95b1bb787.png\"><b><br></b></div><div>* b is branching factor</div><div>* m is the maximum depth</div><div>* soltuions at various dephts</div>",
                ""
            ],
            "flags": 0,
            "guid": "fg+t@R`=k[",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Depfth-First Search (DFS)</u></b><div><b><u><br></u></b></div><div><b>Which nodes are expanded?</b></div><div>{{c2::* Some left prefix of the tree<div>* Could process whole tree!}}</div></div><div><br></div><div><div><b>Space of the fringe</b></div><div>{{c1::\\(O(bm)\\)}}</div></div><div><br></div><div><b>Complete</b></div><div>{{c3::Only when we prevent cycles}}</div><div><br></div><div><b>Optimal</b></div><div>No</div>",
                ""
            ],
            "flags": 0,
            "guid": "i4TMqt2.;b",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Breadth-First Search (BFS)</u></b><div><b><u><br></u></b></div><div><b>Which nodes are expanded?</b></div><div>{{c2::Expand shallowest node first</div><div>Implementation: Fring FIFO Queue}}</div><div><br></div><div><div><b>Space of the fringe</b></div><div>{{c1::\\(O(b^s)\\)}}</div></div><div><br></div><div><b>Complete</b></div><div>{{c3::If solution only finitely deep, yes!}}</div><div><br></div><div><b>Optimal</b></div><div>{{c4::If costs are all 1}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "FcAENsgFb)",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Uniform Cost Search (UCS)</u></b><div><b><u><br></u></b></div><div><b>Which nodes are expanded?</b></div><div>{{c2::* Processes node with cost less than cheapest solution</div><div>* Explores options in every \"direction\"}}</div><div><br></div><div><div><b>Space of the fringe</b></div><div>{{c1::\\(O(b^{C*/\\varepsilon})\\)}}</div></div><div><br></div><div><b>Complete</b></div><div>{{c3::Yes}}</div><div><br></div><div><b>Optimal</b></div><div>Yes</div>",
                ""
            ],
            "flags": 0,
            "guid": "tc^hJ7cP}3",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "A heuristic \\(h\\) is {{c1::<b>admissible </b>(optimistic)}}&nbsp;if:<div>{{c2::\\[0 \\leq h(n) \\leq h^* (n)\\]}}</div><div>where \\(h^* (n)\\) is the true cost to a nearest goal.</div>",
                ""
            ],
            "flags": 0,
            "guid": "Kc0BVPn6t4",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>A* Search</u></b><div><b><u><br></u></b></div><div><b>Which nodes are expanded?</b></div><div>{{c2::Nodes with lowest estimated cost according to \\(f(n) = g(n) + h(n)\\)}}</div><div><br></div><div><b>Complete</b></div><div>{{c3::Yes}}</div><div><br></div><div><b>Optimal</b></div><div>{{c4::If heuristic is admissible}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "sg+.=(.=42",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "A <b>heuristic</b> \\(h_a\\) {{c1::dominates}} a <b>heuristic</b> \\(h_c\\) if:<div>{{c2::\\[\\forall n: h_a(n) \\ge h_c(n)\\]}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "y%KjKs[E(V",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "The <b>max of admissible heuristics</b> is {{c1::admissible}}<div>\\[h(n) = \\max(h_a(n), h_b(n))\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "S)(v=ueb$",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b>Trivial heuristics</b><div><br><b>The zero heuristic</b> is {{c1::dominated by all other heuristics}}</div><div><br></div><div><b>Exact heuristics</b> dominates {{c2::all other admissible heuristics}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "i,_!fs>vdC",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b>Consistency of Heuristics</b><div><b><br></b></div><div>Heuristic \"arc\" cost \\(\\le\\) actual cost for each arc:</div><div>{{c1::\\[h(A) - h(C) \\le \\mathit{cost}(A \\text{to} C)\\]}}</div><div><br></div><div><img src=\"paste-a0adbb537e11aad43b67346104f065cb27c89590.png\"><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "ft<E9Ay{(d",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "search"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "The {{c2::best achievable outcome (utility)}} from that state is the {{c1::value of the state}}<div><br></div><div>For Non-Terminal States:</div><div>\\[V(s) = {{c4::\\max_{s' \\in \\text{children}(s)} V(s')}}\\]<br><br>For Terminal States:</div><div>\\[V(s) = {{c3::\\text{known}}}\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "tFIhGjcG49",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Minimax Values</u></b><div><b><u><br></u></b></div><div>The best achievable outcome (utility) from that state considering {{c2::the <b>worst-case adversary</b>}}</div><div><b><br></b></div><div><b>Non-Terminal States:</b></div><div>{{c1::Agent Control: Maximize own utility<br>\\[V(s) = \\max_{s \\in \\text{successors}(s)} V(s')\\]<br><br>Opponent Control: Assume evil mastermind<br>\\[V(s) = \\min_{s \\in \\text{successors}(s)} V(s')\\]}}<br></div><div><br><b>Terminal States</b></div><div>\\[V(s) = \\text{known}\\]<b><br></b></div><div><br></div><div><img src=\"paste-e2dc17e9bf2ef683161e941e961931c0946277e0.png\"><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "F{us8bR(O#",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<div><b><u>Adversarial Search (Minimax)</u></b><br></div><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c3::<img src=\"paste-d4c849e53a9de5be94c4f0761f4ac07d67a5f70c.png\">}}<br></div><div><br></div><div><b>Algorithm</b></div><div>{{c2::<img src=\"paste-e7cc311a4f5deb6bb2ddbe6f5967f6dab0d4ed51.png\">}}<b><u><br></u></b></div><div><br></div><div><b>Efficiency</b></div><div>{{c1::<div>Exhaustive DFS</div><div>Time: \\(O(b^m)\\)</div><div>Space \\(O(bm)\\)</div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "rcQu$awwR6",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Evaluation Functions</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c4::<div>Score non-terminal states in limited depth to not explore full depth</div><div></div>}}<br></div><div><br></div><div><b>Mathematical</b></div><div>{{c3::<div>Linear Combination of features \\(f_i\\)</div><div>\\[\\text{Eval}(s) = w_1 f_1(s) + w_2 f_2 (s) + \\ldots + w_n f_n (s)\\]</div>}}<br></div><div><br></div><div><div>e.g. Chess: White - black queens</div><div><br></div></div><div><b>Calculation Trade-Off</b></div><div>The {{c1::<b>deeper&nbsp;</b>&nbsp;in the tree}}&nbsp;the evaluation function&nbsp;is buried the {{c2::<b>less the quality of the evaluation function</b>}} matters<br><br><br><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "qSm-&*?gHJ",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Alpha-Beta Pruning</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::Cut paths that will not be chosen anyway}}</div><div><b><u><br></u></b></div><div><b>Algorithm</b></div><div>{{c2::<img src=\"paste-0c37fe70f1c4f5203f2e3cdff4e243c49d462cee.png\">}}<b><br></b></div><div><br></div><div><b>Properties</b></div><div>{{c3::<div>No effect on result in root</div><div>Intermediate values maybe wrong</div><div></div>}}<br></div><div><b>Time complexity</b></div><div>{{c4::<div>\\(O(b^{m/2})\\)</div><div>Achieves double sovable depth!</div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "n_}Wk3S3gN",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Chance Nodes</u></b><div>{{c1::<div>Some decisions are not controlled by the agents but through chance.&nbsp;<br>They are modelled as chance nodes that randomly take a result}}</div></div>",
                "<img src=\"paste-f35d9ed917bf67e2bdfa72e0af046a6e7c35063f.png\">"
            ],
            "flags": 0,
            "guid": "OoRHV4doUU",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Expectimax Search</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::<div>Due to the chance nodes we calculate the expected utility instead of the minimum.</div><div></div>}}<br></div><div><br></div><div><b>Algorithm</b></div><div>{{c2::<img src=\"paste-2b9d3ed7c74b6929b4cf9439fc71618ecb2a4523.png\">}}</div><div><br></div><div><b>Pruning</b></div><div>{{c3::<div>Pruning is not really possible</div><div><img src=\"paste-9389a8995be7a1c2a6baf05d3f1075e42e332faf.png\"></div>}}<br></div><div><br></div><div><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "Big%*G@eN|",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Assumptions vs. Reality</u></b><div><br></div><div><b>Minimax</b></div><div>{{c2::* Assume adversary, opponent acts by chance<br>* Too cautious}}<br><br></div><div><b>Expectimax</b></div><div>{{c1::<div>* Assume chance opponent, but opponents is evil overlord</div><div>* Too aggressive</div><div><div></div></div>}}<br></div><div><div><br></div></div>",
                ""
            ],
            "flags": 0,
            "guid": "kD-qD9m-E|",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "adversial_games"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Markov Decision Process (MDP)</u></b><div><b><u><br></u></b></div><div><b>Definition</b></div><div>{{c1::<div>Set of states \\(s \\in S\\)</div><div>Set of actions \\(a \\in A\\)</div><div>A transition distribution \\(p(s' | s, a)\\)</div><div>A reward function \\(R(s) | R(s,a) | R(s, a, s')\\)</div><div>Maybe a terminal state</div>}}<br></div><div><br></div><div><b>Markov Property</b></div><div>Action outcomes {{c2::<b>depend only on the current state</b>, not on history</div><div>\\(p(S_{t+1} = s' | S_t = s_t, A_t = a_t, S_{t-1} = s_{t-1}, A_{t-1}, \\ldots S_0 = s_0) = p(S_{t+1} = s' | S_t = s_t, A_t = a_t)\\)}}</div><div><br></div><div><b>Variations:<br></b>{{c3::<img src=\"paste-e23b2eed6effefe603df62b1ea0ac03d8d5ded8a.png\">}}<b><br></b></div>",
                ""
            ],
            "flags": 0,
            "guid": "r[&KG.X+}V",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Policies</u></b><div><b><u><br></u></b></div><div>A Policy \\(\\pi\\) {{c2::</div><div>gives an action for each state</div><div>\\(\\pi: S \\to A\\)</div>}}<div><br></div><div>The optimal policy \\(\\pi^*\\) {{c1::maximizes the expected utility if followed}}</div><div><br></div><div><b>Types of Policies</b><br></div><div>{{c3::<div>Stochastic: \\(a_t \\sim \\pi(a | s\\)</div><div>Deterministic: \\(a = \\pi(s)\\)</div><div></div>}}<br></div><div><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "xv2&A@$i;d",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Utilities of Sequences</u></b><div><b><u><br></u></b></div><div>Do we prefer more or less reward?&nbsp;</div><div>\\[[1, 2, 2] \\text{ or } [2, 3, 4]\\]</div><div>Now or later?</div><div>\\[[0, 0, 1] \\text{ or} [1, 0, 0]\\]</div><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c2::<div>Stationary preferences</div><div><img src=\"paste-a76a7fa975a0aad12f12916e5807c6150dcf9dbe.png\"></div>}}<br></div><div><br></div><div><b>Definitions</b></div><div>{{c1::<div>Additive Utility \\(U([r_0, r_1, r_2, \\ldots]) = r_0 + r_1 + r_2 + \\cdots\\)</div><div>Discounted Utility \\(U([r_0, r_1, r_2, \\ldots]) = r_0 + \\gamma r_1 + \\gamma^2 r_2 + \\cdots\\)</div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "fjhqflJPoc",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Infinite Rewards</u></b><div>What if the game lasts forever? -&gt; Infinite Rewards<br><br><b>Solutions</b></div><div>1. {{c1::<i>Finite Horizon</i>: Terminate after \\(T\\) steps}}</div><div><br></div><div>2<i>.</i>{{c2::<i>Discounting</i>: Use \\(0 &lt; \\gamma &lt; 1\\) then</div><div>\\[J = \\sum_{t=0}^\\infty \\gamma^t_r \\le R_{max} / (1 - \\gamma)\\]}}</div><div><br></div><div><i>3.&nbsp;</i>{{c3::<i>Absorbing State</i>: Guarantee that every policy reaches terminal state}}</div><div><br></div><div><br></div><div>Most used: {{c4::Discounting}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "joZG5`hV;`",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Optimal Quantities</u></b><div><b><u><br></u></b></div><div><b>Optimal Value of a state:</b></div><div>{{c2::\\(V^*(s)\\) expected summed reward startin in \\(s\\) and acting optimally}}</div><div><br></div><div><b>Optimal Value of a state action pair:</b>{{c1::</div><div><b></b></div><div>\\(Q^*(s, a)\\) expected summed reward starting out having taken action \\(a\\) from state \\(s\\) and acting optimally</div>}}",
                ""
            ],
            "flags": 0,
            "guid": "rozY;-ZhWc",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Bellman Optimality Principle</u></b><div><b><u><br></u></b></div><div>\"Principle of Optimality: An optimal policy has the property that \nwhatever the initial state and initial decision are, the remaining \ndecisions must constitute an optimal policy with regard to the state \nresulting from the first decision.\"<b><u><br></u></b></div><div><b><u><br></u></b></div><div>Recursive Definition of optimal values (Bellman 1957)</div><div><br></div><div>\\[V^*(s) = {{c1::\\max_a \\left(r(s, a) + \\gamma \\sum_{s'} P(s'|s,a)V^*(s')\\right)}}\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "u$p(#)s>kI",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Time-Limited Values</u></b><div><b><br></b></div><div>Define \\(V_k\\) to only calculate limited depth</div><div><br></div><div>\\[V^*_k(s) = {{c1::\\max_a \\left(r(s, a) + \\gamma \\sum_{s'} P(s'|s,a)V_{k-1}^*(s')\\right)}}\\]<br></div>",
                "<img src=\"paste-6260446bec12c2bed7cf6e1779a618d0c19d6dcd.png\">"
            ],
            "flags": 0,
            "guid": "JB41sA2)9d",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Value Iteration</u></b><div><b><u><br></u></b></div><div><b>Algorithm</b></div><div>{{c1::<img src=\"paste-48e1ac9acdb0ef89cb22623b92ca57e096e4e57f.png\">}}<b><br></b></div><div><br></div><div><b>Convergence</b></div><div>{{c2::The value iteration converges to the optimal value function \\(V^*\\) for the <b>discounted infinite horizon probleme</b> which satisfies the Bellman equations}}</div><div><b><br></b></div>",
                ""
            ],
            "flags": 0,
            "guid": "p_n2o4t!%d",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Q-Value Iteration</u></b><div><b><u><br></u></b></div><div><b style=\"\">Q-Value</b></div><div>\\[Q^*(s, a) = {{c1::\\left(r(s, a) + \\gamma \\sum_{s'} P(s'|s, a) \\max_{a'} Q^*(s', a')\\right)}}\\]<br><br></div><div><b>Q-Value Iteration</b></div><div>\\[Q_k^*(s, a) = {{c1::\\left(r(s, a) + \\gamma \\sum_{s'} P(s'|s, a) \\max_{a'} Q_{k-1}^*(s', a')\\right)}}\\]<b><br></b></div><div><br></div><div><b>Policy of Q-Value</b></div><div>\\[\\pi^*(s) = {{c2::\\arg \\max_a Q^*(s, a)}}\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "O:if.hz?TQ",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Policy Iteration</u></b><div><b><u><br></u></b></div><div><b>Approach</b></div><div>1. {{c1::<i>Policy Evaluation</i>: Calculate values for some fixed policy until convergence}}</div><div>2. {{c2::<i>Policy Improvement</i>: Update policy using one-step look-ahead with resulting converged utilities as future values}}</div><div><i>3. </i>Repeat until convergence</div><div><br></div><div><b>Properties</b></div><div><b style=\"\">- </b>{{c3::Optimal}}</div><div>- {{c4::Converges faster under some conditions}}</div>",
                "<img src=\"paste-1da3ab170da64433c6c2077092926d3c9d614097.png\">"
            ],
            "flags": 0,
            "guid": "lBN&yH9r{|",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Policy Dependent Value Function</u></b><div><b><u><br></u></b></div><div>Expected Reward when following \\(\\pi\\)</div><div>\\[V^\\pi (s) = {{c1::\\mathbb{E} \\left[\\sum_{t=0}^infty \\gamma^t r_t | s_0 = s\\right]}}\\]</div><div><br></div><div>\"How good\" is it to be in state \\(s\\) under policy \\(\\pi(a|s)\\)</div>",
                ""
            ],
            "flags": 0,
            "guid": "qQFeAZ/DAi",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Policy Dependent Q-Function</u></b><div><b><u><br></u></b></div><div>Expected Reward when taking Action \\(a\\) in State \\(s\\) and following \\(\\pi\\)</div><div>\\[Q^\\pi (s, a) = {{c1::\\mathbb{E}_{\\pi, P} \\left[\\sum_{t=0}^infty \\gamma^t r_t | s_0 = s, a_0 = a\\right]}}\\]</div><div><br></div><div>\"How good\" is it to take action \\(a\\) in state \\(s\\) under policy \\(\\pi(a|s)\\)</div>",
                ""
            ],
            "flags": 0,
            "guid": "P{f;.!D;0S",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Computing Policy Dependent V-/Q-Function</u></b><div><b><u><br></u></b></div><div><div><b>Value Function from Q-Function</b></div><div>\\[V^\\pi (s) = {{c1::\\sum_{a} \\pi(a|s) Q^\\pi (s, a)}}\\]</div></div><div><br></div><div><div><b>Q-</b><b>Function from Value Function</b></div><div>\\[Q^\\pi (s, a) = {{c2::r(s, a) + \\gamma \\mathbb{E}_P \\left[V^\\pi (s') | s, a\\right]}}\\]</div></div>",
                ""
            ],
            "flags": 0,
            "guid": "s2W*;#W>*3",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f579d0fbba24bf3b8a48053fe92f70a-oa-1",
                "Policy Iteration Algorithm",
                "<img src=\"tmpk9d0143z.png\" />",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-1-A.svg\" />",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "e%JGL@#I)U",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f579d0fbba24bf3b8a48053fe92f70a-oa-2",
                "Policy Iteration Algorithm",
                "<img src=\"tmpk9d0143z.png\" />",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-2-A.svg\" />",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "DcS<A/wv24",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "9f579d0fbba24bf3b8a48053fe92f70a-oa-3",
                "Policy Iteration Algorithm",
                "<img src=\"tmpk9d0143z.png\" />",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-3-A.svg\" />",
                "<img src=\"9f579d0fbba24bf3b8a48053fe92f70a-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "rMm;M`Mby*",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "mdp"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Reinforcment Learning</u></b><div><b><u><br></u></b></div><div>Learning without {{c2::supervisor}}, but with {{c2::a <b>reward signal</b>}}</div><div>Selected actions influence {{c1::future states}}</div>",
                "<img src=\"paste-46d4edf2d02cf6220ca1d47cc6a5fba6a0a07294.png\">"
            ],
            "flags": 0,
            "guid": "CVjsX8.C3&",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>FF-NNs as Function Approximator</u></b><div><b><u><br></u></b></div><div>Given a potentially {{c1::<b>infinite amount of units</b>}}, they can {{c2::<b>approximate</b> any function arbitrarily well}}.</div><div><br></div><div><b>Univeral Function Approximation Theorem</b></div><div>Already {{c3::a single layer is enough}} to achieve \"universality\"{{c3::</div><div></div><div>But multiple layers allo for a more compact representation</div>}}",
                ""
            ],
            "flags": 0,
            "guid": "La@hoiXj]|",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Learning from Demonstration | Imitation Learning</u></b><div><b><u><br></u></b></div><div>Supervision through an {{c1::expert (teacher)}} that {{c2::provides a set of demonstration trajectories:}}<br>{{c3::Sequences of states and actions}}</div>",
                "<img src=\"paste-a266491fc10e1c79e9820e4fdbd7f90102a1830b.png\">"
            ],
            "flags": 0,
            "guid": "bCo2zf0H*!",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Approaches Imitation Learning</u></b><div><b><u><br></u></b></div><div><b>Direct</b></div><div>{{c1::Supervised training}} of policy using {{c2::the demonstration trajectories as ground-truth (behaviour cloning)}}</div><div><br></div><div><b>Indirect</b></div><div>Learn {{c4::the unknown reward function/goal of the teacher}}, and {{c3::</div><div>derive policy from these</div><div>(Inverse Reinforcement Learning)</div>}}",
                ""
            ],
            "flags": 0,
            "guid": "qgbGvO/7|z",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<u style=\"font-weight: bold;\">Behavioural Cloning</u><br><br>Fix a {{c2::policy class}}<div>Estimate {{c2::policy}} from training examples</div><div>Frequently boils down to {{c1::a regression problem}}</div><div><br></div><div><b>Success Stories</b></div><div>Pomerleau: ALVINN</div><div>Summut et al.: Learning to fly in flight simulator<br><br><b>Problems</b></div><div>{{c5:: Data mismatch<div><img src=\"paste-3951a6c79977e8ed25baaf5ffcc3a03ae9f01969.png\">}}</div></div><div>{{c4::Non-Markovian observations}}</div><div>{{c3::Multimodal behaviour<div><img src=\"paste-d39e957916474513ec4514a1a42b774d45a6d67e.png\">}}</div></div>",
                ""
            ],
            "flags": 0,
            "guid": "q<*2wG94b/",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Data Mismatch Problem</u></b><div><b><u><br></u></b></div><div>\\[{{c2::p_\\pi (o_t) \\neq p_{\\text{data} } (o_t)}}\\]</div><div><br></div><div><b>Solutions</b><br>1. {{c1::Data augmentation}}</div><div>2. {{c1::Data aggregation}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "b]u(I}{Ang",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Dataset Aggregation</u></b><div><b><u><br></u></b></div><div><b>Goal</b></div><div>Collect training data {{c1::from policy distribution \\(p_\\pi (o_t)\\) instead for expert distribution \\(p_{\\text{data} }(o_t)\\)}}</div><div><br><b>How</b></div><div>{{c2::Run the policy \\(\\pi_\\theta (a|o)\\) and ask the human for the action labels}}&nbsp;&nbsp;</div>",
                "<img src=\"paste-86100260c7b60c962bf8476365f99f35aa07ada3.png\">"
            ],
            "flags": 0,
            "guid": "jY_OpUX=<?",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Non-Markovian Observations</u></b><div><b><u><br></u></b></div><div>Observations {{c3::might not be sufficient to explain the behaviour.}}<br>Human expert {{c3::might use his memory}}</div><div><b><u><br></u></b></div><div><b>Solutions</b></div><div>1. {{c1::Use Recurrent Neural Nets}}</div><div>2. {{c2::Use history dependent policies}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "B;B(f{|k^U",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Multi-Model Behaviour</u></b><div><b><u><br></u></b></div><div>Demonstrations might be {{c4::ambiguous.}}<br>Multiple Teachers can {{c5::impact performance even though we have more data.}}</div><div><br></div><div><b>Solutions</b></div><div>1. {{c1::Output Mixture Models}}</div><div>2. {{c2::Latent Variable Models}}</div><div>3. {{c3::Normalizing Flows}}</div>",
                "<img src=\"paste-eaa6309fcc0e4e2394bb2d06404e9023ad71500a.png\">"
            ],
            "flags": 0,
            "guid": "k#1lC4-?vO",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "supervised_behaviour"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>RL Agents</u></b><div><b><u><br></u></b></div><div><b>Goal</b></div><div>Find a policy which{{c4:: maxmizes expected cumulative future reward</div><div>\\[J_\\pi = \\mathbb{E}_\\pi \\left[\\sum_{t=0}^\\infty \\gamma^t r_t\\right]\\]</div>}}<div><br></div><div><b>Components</b></div><div>At least one of the following</div><div>1. {{c1::Policy}}</div><div>2. {{c2::Value-Function}}</div><div>3. {{c3::Model: Representation of environment}}</div><div><br></div><div><b>Anatomy</b></div><div>{{c5::<img src=\"paste-a6c5a767145e7e896b495705c3db6f383610fb6f.png\">}}<b><br></b></div>",
                ""
            ],
            "flags": 0,
            "guid": "I7Bgz9&_Gr",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-1",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-1-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "p/QSs&3etI",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-2",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-2-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "(H4CN~TIm",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-3",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-3-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "B!cxr`%Gg$",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-4",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-4-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "pE2wvnz]zm",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-5",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-5-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "JGQic5H_[{",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-6",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-6-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-6-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "s6T8der_S1",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-7",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-7-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-7-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "C^|?<7~L6A",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-8",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-8-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-8-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "dbmLgY~PO}",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "0788c61356c94792b1302e9b4b897450-oa-9",
                "Taxonomy of RL Algorithms",
                "<img src=\"tmprneoowoe.png\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-9-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-9-A.svg\" />",
                "<img src=\"0788c61356c94792b1302e9b4b897450-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "O+rk5SAQip",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Sample Efficiency</u></b><div><b><u><br></u></b></div><div>How many {{c1::samples do we need to get a good policy?}}<br><div><b><u><br></u></b></div></div><div><b><u><br></u></b></div><div><b>Off Policy</b></div><div>{{c2::Able to improve the policy without generating new samples from that policy}}</div><div><br></div><div><b>On Policy</b></div><div>{{c3::Each time the policy is changed, even a little bit, we need to generate new samples}}</div>",
                "<img src=\"paste-95d1d1929564e35fd7f5a0f990f41e831285933b.png\"><div><img src=\"paste-8c317522cf9f4b10e8dedc5a009ef22c46772c37.png\"><br></div>"
            ],
            "flags": 0,
            "guid": "mnpB86cJru",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Monte Carlo Estimates</u></b><div><b><u><br></u></b></div><div><b>First Visit Monte Carlo</b></div><div>{{c2::<div>Average return following virst visit to state s</div><div><img src=\"paste-2ec872e0b0bd08887d544cc1553de01d73f7a6c8.png\"></div>}}<br></div><div><br></div><div><b>Constant Alpha MC</b></div><div>{{c1::<div>Compute moving average</div><div>\\[V^\\pi (s_t) \\gets (1 - \\alpha) V^\\pi (s_t) + \\alpha R_t\\]</div>}}<br></div><div><br></div><div><b>Limitations</b></div><div>{{c3::Returns are very noisy}}</div><div>{{c4::Sample inefficient}}</div><div>{{c5::We have to wait until episode is over}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "slX;|o&fJh",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "113afdf3d1b6424cb10dd5de6252af54-ao-1",
                "Temporal Difference Learning",
                "<img src=\"tmpk4ogi6ok.png\" />",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-1-A.svg\" />",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "MQ)R9Ys*ZN",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "113afdf3d1b6424cb10dd5de6252af54-ao-2",
                "Temporal Difference Learning",
                "<img src=\"tmpk4ogi6ok.png\" />",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-2-A.svg\" />",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "MH.:4:1wW9",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "113afdf3d1b6424cb10dd5de6252af54-ao-3",
                "Temporal Difference Learning",
                "<img src=\"tmpk4ogi6ok.png\" />",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-3-A.svg\" />",
                "<img src=\"113afdf3d1b6424cb10dd5de6252af54-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Q)uU418C@L",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Exploration-Exploitation Tradeoff</u></b><div><b><u><br></u></b></div><div>Tradeoff between {{c3::exploring for new better actions}} and {{c3::exploiting the known good ones.}}</div><div><br></div><div><b>Common Exploration Policies</b></div><div>1. {{c2::Epsilon Greedy Policy: Take random action with probability \\(\\varepsilon\\)}}</div><div>2. {{c1::Soft-Max Policy: Higher Q-Value, higher probability}}<br><div><b><u><br></u></b></div></div>",
                ""
            ],
            "flags": 0,
            "guid": "Ia:}qG9[b5",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "a9aeca45c52f49039133c747ce86bbc3-ao-1",
                "Tabular Q-Learning",
                "<img src=\"tmpvtwh0z17.png\" />",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-1-A.svg\" />",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "JZ.Pv;awCm",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "a9aeca45c52f49039133c747ce86bbc3-ao-2",
                "Tabular Q-Learning",
                "<img src=\"tmpvtwh0z17.png\" />",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-2-A.svg\" />",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "D]o?gX}$_h",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "a9aeca45c52f49039133c747ce86bbc3-ao-3",
                "Tabular Q-Learning",
                "<img src=\"tmpvtwh0z17.png\" />",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-3-A.svg\" />",
                "<img src=\"a9aeca45c52f49039133c747ce86bbc3-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "F6}p!e)Pc,",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Q-Learning Properties</u></b><div><b><u><br></u></b></div><div><b>Requirements</b></div><div>1. {{c2::Visit every state-action pair infinitely often}}</div><div>2.{{c3::</div><div> Learning rate schedule such that</div><div>\\[\\sum_{t=0}^\\infty \\alpha_t(s, a) = \\infty \\qquad \\sum_{t=0}^\\infty \\alpha_t(s, a)^2 &lt; \\infty\\]</div><div>e.g. \\(\\alpha_t = \\frac{1}{t}\\)</div>}}<div><br></div><div><b>Result</b></div><div>{{c1::Q-Learning converges to optimal policy even if acting suboptimally}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "D7+W?&&E3e",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "54d1d631eac04aec8e447719b4970190-oa-1",
                "Approximate Q-Learning",
                "<img src=\"tmp0mhsxm47.png\" />",
                "<img src=\"54d1d631eac04aec8e447719b4970190-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"54d1d631eac04aec8e447719b4970190-oa-1-A.svg\" />",
                "<img src=\"54d1d631eac04aec8e447719b4970190-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Qa1[P:s&/K",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "54d1d631eac04aec8e447719b4970190-oa-2",
                "Approximate Q-Learning",
                "<img src=\"tmp0mhsxm47.png\" />",
                "<img src=\"54d1d631eac04aec8e447719b4970190-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"54d1d631eac04aec8e447719b4970190-oa-2-A.svg\" />",
                "<img src=\"54d1d631eac04aec8e447719b4970190-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "t>wWthy;:u",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Properties Approximate Q-Learning</u></b><div><b><u><br></u></b></div><div><b>Problem</b></div><div>Standard Q-Learning with NN is known {{c3::<b>to diverge</b>}}&nbsp;very easily</div><div><br></div><div><b>Reason</b></div><div>Its actually not real gradient descent</div><div>* {{c1::Sequential States are strongly correlated}}</div><div>* {{c2::Target value is always changing}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "AW3*Go/VrZ",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Replay Buffers</u></b><div><b><u><br></u></b></div><div><b>Problem</b></div><div>{{c1::Sequential states are strongly correlated}}</div><div><br></div><div><b>Solution</b></div><div>{{c2::Q-Learning with replay buffers}}</div>",
                "<img src=\"paste-24186cfaa145645b1e9e5d0a3da2437af6179bd7.png\">"
            ],
            "flags": 0,
            "guid": "pPhPRww^`O",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Target Networks</u></b><div><b><u><br></u></b></div><div><b>Problem</b></div><div>{{c2::By changing \\(\\beta\\), we might also change the target values \\(y_t\\)<br>-&gt; We actually do not do gradient descent}}<br></div><div><br></div><div><b>Solution</b><br>{{c1::Use an older set of weights \\(\\beta'\\) to compute the targets (target network)}}</div><div><b><u><br></u></b></div>",
                "<img src=\"paste-71252cd41462049daf62ebd673f00f9837362516.png\">"
            ],
            "flags": 0,
            "guid": "tR0;A&};z_",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "rl"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "1ac58c86e4334a3bbd23be0ac4f13b29-oa-1",
                "Policy vs Value Optimization",
                "<img src=\"tmp6c1v99_q.png\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-1-A.svg\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "F!V>>ks`h-",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "1ac58c86e4334a3bbd23be0ac4f13b29-oa-2",
                "Policy vs Value Optimization",
                "<img src=\"tmp6c1v99_q.png\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-2-A.svg\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "w(vMquCQnT",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "1ac58c86e4334a3bbd23be0ac4f13b29-oa-3",
                "Policy vs Value Optimization",
                "<img src=\"tmp6c1v99_q.png\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-3-A.svg\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "MqF]g%F?N-",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "1ac58c86e4334a3bbd23be0ac4f13b29-oa-4",
                "Policy vs Value Optimization",
                "<img src=\"tmp6c1v99_q.png\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-4-A.svg\" />",
                "<img src=\"1ac58c86e4334a3bbd23be0ac4f13b29-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "wP1|41&%VJ",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Policy Gradient Methods</u></b><div><b><u><br></u></b></div><div><b>Steps</b></div><div>{{c1::Use parametric policy \\(\\pi_\\theta (a | s)\\)}}</div><div>{{c2::Stochasticity is used for exploration}}</div><div>{{c3::Directly update parameters of policy using GD \\(\\theta \\gets \\theta + \\alpha \\frac{d J(\\theta)}{d \\theta}\\)}}</div>",
                "<img src=\"paste-bb91b8589faf261596c5e37f719a260ab41aaaa1.png\">"
            ],
            "flags": 0,
            "guid": "M1@M_B:n)#",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Deep Policy Representation</u></b><div><b><u><br></u></b></div><div><b>Discrete Actions</b>{{c2::</div><div><b></b></div><div>\\[\\pi_\\theta (a | s) = \\frac{\\exp \\left(h_\\theta (s, a)\\right)}{\\sum_{a' \\in A} \\exp (h_\\theta(s, a'))}\\]</div><div>Neural Network softmax-policy</div>}}<div><br></div><div><b>Gaussian Neural Network Policy</b></div><div>{{c1::<div>\\[\\pi_\\theta(a|s) = \\mathscr{N} (a | \\mu_\\theta(s), \\sum_\\theta(s))\\]</div><div>Well for continuous actions</div>}}<br></div>",
                "<img src=\"paste-5bbdc15c9d9688e2ca8518c2cb510dbf731dfd7e.png\">"
            ],
            "flags": 0,
            "guid": "dS7[;.Ao}l",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Objective for Policy Gradient</u></b><div><b><u><br></u></b></div><div><b>Objective</b></div><div>{{c1::<div>\\[J(\\theta) = \\mathbb{E}_{\\tau \\sim p_\\theta (\\tau)} \\left[\\sum_t \\gamma^t r(s_t, a_t)\\right]\\]</div><div>\\[\\approx \\frac{1}{N} \\sum_i \\sum_t \\gamma^t r(s_{i, t}, a_{i, t})\\]</div><div><img src=\"paste-4e1354ba606f9b1e7bcbb07152e0bf9aecefe117.png\"></div>}}<br></div><div><br></div><div><b>Gradient</b></div><div>{{c2::<div>\\[\\nabla_\\theta J(\\theta) = \\int p_\\theta(\\tau) \\nabla_\\theta \\log p_\\theta (\\tau) R(\\tau) d\\tau\\]</div><div>Calculating the gradient</div><div>\\[\\nabla_\\theta \\log p_\\theta (\\tau) = \\sum_{t=0}^{T-1} \\nabla_\\theta \\log \\pi_\\theta (a_t | s_t)\\]</div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "n5TNF8n>J%",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "83d66e5428c94228b5d2e988e27e0536-ao-1",
                "REINFORCE Algorithm",
                "<img src=\"tmp310jui4m.png\" />",
                "<img src=\"83d66e5428c94228b5d2e988e27e0536-ao-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"83d66e5428c94228b5d2e988e27e0536-ao-1-A.svg\" />",
                "<img src=\"83d66e5428c94228b5d2e988e27e0536-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "36WSXNsfG",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "83d66e5428c94228b5d2e988e27e0536-ao-2",
                "REINFORCE Algorithm",
                "<img src=\"tmp310jui4m.png\" />",
                "<img src=\"83d66e5428c94228b5d2e988e27e0536-ao-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"83d66e5428c94228b5d2e988e27e0536-ao-2-A.svg\" />",
                "<img src=\"83d66e5428c94228b5d2e988e27e0536-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "h}tDkn|Z{G",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Policy Gradient Baselines</u></b><div><b><u><br></u></b></div><div><b>Problem</b></div><div>{{c3::High Variance in Gradients}}</div><div><br></div><div><b>Solution</b></div><div>{{c1::<div>Always subtract a baseline \\(b\\) from the returns</div><div>\\[\\nabla_\\theta J(\\theta) = \\frac{1}{N} \\sum_{i=1}^N \\nabla_\\theta \\log p_\\theta(\\tau_i)(R_i - b)\\]</div>}}<br></div><div><br></div><div><b>Good baseline choices</b></div><div>1. {{c2::Average reward}}</div><div>2. {{c4::Expected reward to come from time \\(t\\)}}</div><div>3. {{c5::State-dependent expected return}}</div><div><b><u><br></u></b></div>",
                "<img src=\"paste-0ca7390c2382b57531c17483b71128c289d52121.png\">"
            ],
            "flags": 0,
            "guid": "Q)2~,9AP`A",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Actor Critic Algorithms</u></b><div><b><u><br></u></b></div><div>Actor-critic algorithms use {{c1::parametrized policies and value functions}}</div><div>* {{c2::Gradient-based updates of the policy}}</div><div>* {{c3::Value functions evaluate the quality of the executed action}}</div><div>* {{c3::Further decrease the variance of the policy gradient}}</div>",
                "<img src=\"paste-31297297ccf0b54f2baa5db4df2fc89a95cb272d.png\">"
            ],
            "flags": 0,
            "guid": "PuDQ,/eFEK",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b36bbe8c67b942558214d4db8dd34d22-oa-1",
                "Actor-Critic Algorithms",
                "<img src=\"tmp0t00yfmx.png\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-1-A.svg\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "o6zP+#hFBv",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b36bbe8c67b942558214d4db8dd34d22-oa-2",
                "Actor-Critic Algorithms",
                "<img src=\"tmp0t00yfmx.png\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-2-A.svg\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "Q3!yECs=:|",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b36bbe8c67b942558214d4db8dd34d22-oa-3",
                "Actor-Critic Algorithms",
                "<img src=\"tmp0t00yfmx.png\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-3-A.svg\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "f#0B45Y>`[",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b36bbe8c67b942558214d4db8dd34d22-oa-4",
                "Actor-Critic Algorithms",
                "<img src=\"tmp0t00yfmx.png\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-4-A.svg\" />",
                "<img src=\"b36bbe8c67b942558214d4db8dd34d22-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "tV3_xSFq&^",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Advantage Function</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::\\[A^\\pi(s, a) = Q^\\pi (s, a) - V^\\pi (s)\\]<br>How much better is it to execute action \\(a\\) in state \\(s\\) in comparison to the expected behavior?}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "q0e82;)?A#",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>n-step Returns</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::We \"cut\" the trajectories after n-steps and use the value function for predicting the future reward}}</div><div><br></div><div><b>Size of n</b></div><div>small: {{c2::Reduced variance, potential high bias}}</div><div>large: {{c3::Higher variance, reduced bias}}</div><div><br></div><div><b>T-step return</b></div><div>\\[\\hat Q_T^\\pi (s_{i, t}, a_{i, t}) = {{c4::\\sum_{k=1}^T \\gamma^{k-t} r(s_{i, t}, a_{i, t})}}\\]</div>",
                ""
            ],
            "flags": 0,
            "guid": "G{cj`-(Q~`",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Generalized Advantage Estimation (GAE)</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::Average over all n-step returns}}</div><div>{{c2::Exponentially smaller weight for higher steps as they have more variance}}</div><div>{{c3::\\[Q^\\pi_{GAE} (s_{i, t}, a_{i, t}) = (1 - \\lambda) \\sum_{k=1}^\\infty \\lambda^k \\hat Q_k (s_{i, t}, a_{i, t})\\]}}</div><div><br></div><div>With \\((1 - \\lambda) \\sum_{k=1}^\\infty \\lambda^k = 1\\)</div>",
                ""
            ],
            "flags": 0,
            "guid": "DnYD%)oKgs",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Importance Sampling</u></b><div><br></div><div><b>Problem</b></div><div>Data cannot be reused for policy gradient</div><div><br></div><div><b>Solution</b></div><div>{{c1::Importance sampling: Approximate expectation w.r.t \\(p(x)\\) if we only have samples from \\(q(x)\\)}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "bS`$6W2(xk",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Step Size Regulation</u></b><div><b><u><br></u></b></div><div><b>Problem</b></div><div>* {{c1::Policy Update too large}}</div><div>* {{c2::Exploration decreases too quickly}}</div><div><br></div><div><b>Solution</b></div><div>{{c3::<div>Use constsraints to limit the \"distance\" between new and old policy</div><div>\\[\\theta_{new} = \\arg \\max_\\theta J(\\theta), \\qquad s.t. D(p_\\theta(\\tau)||p_{\\theta_{old} } (\\tau)) \\]</div>}}<br></div>",
                "<img src=\"paste-703e38d10eac55f17d7fbe58d19cd75012d491c5.png\">"
            ],
            "flags": 0,
            "guid": "C2O9(<YnU~",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "policy_gradients"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Sensor Classification</u></b><div><b><u><br></u></b></div><div><b>What</b></div><div>{{c1::Proprioceptive sensors}}: {{c3::Measure values internally}}<br></div><div>{{c1::Exteroceptive sensors}}: {{c3::Measure information about the robots environment}}</div><div><br></div><div><b>How</b></div><div>{{c2::Passive sensors}}: {{c4::Measure energy coming from the environment}}</div><div>{{c2::Active sensors}}<i>:</i>&nbsp;{{c4::Emit their proper energy and measure the reaction}}</div><div><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "Aht;KL?rE^",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Pinhole Camera</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::Inifinitely small hole as focus&nbsp;}}</div><div><br></div><div><b>Focal length</b></div><div>Distance between {{c2::barrier (diaphragm) and image plane}}</div><div><br></div><div><div><b>Result</b></div><div>{{c3::Most rays are blocked -&gt; Each scene point contributes to only one pixel</div><div>Image is inverted}}</div><div><br></div><div><b>Problem</b></div><div>{{c4::Inifintely small hole not possible -&gt; Object become blurrier}}</div></div>",
                "<img src=\"800px-Pinhole-camera.svg.png\">"
            ],
            "flags": 0,
            "guid": "kP3vPk+HS^",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Lens Camera</u></b><div><b><u><br></u></b></div><div><b>Idea</b></div><div>{{c1::Use lens to focus image rays to single points}}</div><div><br></div><div><b>Focal length</b></div><div>{{c2::0.5 Distance between barrier (diaphgragm) and image plane}}</div><div><br></div><div><b>Result</b></div><div>{{c3::Rays are focused for a specific object distance on one point. Focused image for this distance}}</div><div><br></div>",
                "<img src=\"paste-9e91407336f3493892bc6e96a3331ecd4bead2c3.png\">"
            ],
            "flags": 0,
            "guid": "h-B;XT,mPt",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Structured Light</u></b><div><b><u><br></u></b></div><div>Common method for obtaining depth:<br>{{c3::<div>* Project structured light on scene</div><div>* Perceive light by camera</div><div>* Determine range with geometry</div>}}<br></div><div><br></div><div>e.g. {{c2::Microsoft Kinect}}</div><div><br></div><div>Cameras with depth usually refered as {{c1::RGBD Cameras}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "pquZevRy[)",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Camera Model Coordinates</u></b><div><b><u><br></u></b></div><div><b>Image Coordinates</b></div><div>{{c5::Origin in left top}}</div><div><br></div><div><b>Camera Coordinates</b></div><div>{{c6::Origin in projection centre. z-Axis to the front}}</div><div><br></div><div><b>World Coordinates</b></div><div>{{c3::Basis coordinates arbitrary}}</div><div><br></div><div><b>Calibration Matrix (Camera - Image)</b></div><div>{{c4::\\[K = \\begin{pmatrix}f_x &amp; 0 &amp; c_x \\\\ 0 &amp; f_y &amp; c_y\\\\0 &amp; 0 &amp; 1\\end{pmatrix}\\]}}</div><div><br></div><div><b>World to Camera Matrix</b></div><div>{{c2::<div>\\[P_c = RP_w - T\\]</div><div>Homogenous:</div><div>\\[\\begin{pmatrix}X\\\\Y\\\\Z\\\\1\\end{pmatrix} = \\begin{pmatrix}r_{11} &amp; r_{12} &amp; r_{13}&nbsp;&amp; t_1 \\\\</div><div>&nbsp;r_{21} &amp; r_{22} &amp; r_{23}&nbsp;&amp; t_2 \\\\</div><div>&nbsp;r_{31} &amp; r_{32} &amp; r_{33}&nbsp;&amp; t_3 \\\\</div><div>&nbsp;0 &amp; 0 &amp; &amp; 0 &amp; 1\\end{pmatrix} \\begin{pmatrix}U \\\\ V \\\\ W \\\\ 1\\end{pmatrix}\\]</div><div>\\[P_c = M_{ext} P_w\\]</div>}}<br></div><div><br></div><div><b>Instrinsic Calibration (Film plane - Pixel)</b></div><div>{{c1::<div>\\[\\begin{pmatrix}u \\\\ v\\end{pmatrix} = \\begin{pmatrix}c_x \\\\ c_y\\end{pmatrix} + \\frac{1}{Z}</div><div>\\begin{pmatrix}f_x \\cdot X \\\\ f_y \\cdot Z\\end{pmatrix}\\]</div>}}<br></div><div><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "yE$/}+yFM2",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Convolution</u></b><div><br></div><div>\\[\\begin{pmatrix}-1 &amp; 0 &amp; 1\\\\-1 &amp; 0 &amp; 1\\\\ -1 &amp; 0 &amp; 1\\end{pmatrix} * Y\\]</div><div><br></div><div><b>How-To</b></div><div>{{c2::Slide the left matrix over the entire Image \\(Y \\in \\mathbb{R}^{m \\times n}\\), sum the product of corresponding entries for each position<br>}}<br></div><div><br></div><div>Often referred to as {{c1::filter}}</div><div><br></div><div><b>Examples</b></div><div>{{c5::Gaussian Blur}} \\[H = \\begin{pmatrix}</div><div>G_\\sigma (-1, -1) &amp; G_\\sigma (-1, 0)&nbsp;&nbsp;&amp; G_\\sigma (-1, 1)\\\\</div><div>G_\\sigma (0, -1)&nbsp;&nbsp;&amp; G_\\sigma (0, 0)&nbsp;&nbsp;&amp; G_\\sigma (0, 1)&nbsp;\\\\</div><div>G_\\sigma (1, -1)&nbsp;&nbsp;&amp; G_\\sigma (1, 0)&nbsp;&nbsp;&amp; G_\\sigma (1, 1) \\end{pmatrix}\\]</div><div><br></div><div>{{c4::Edge detection}} \\[H_x = \\begin{pmatrix}-1 &amp; 1\\end{pmatrix},\\qquad H_y = \\begin{pmatrix}-1\\\\1\\end{pmatrix}\\]</div><div><br></div><div><i>Sobel Filter: </i>{{c3::Combine blur and edge detection}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "wmqe<@qoF?",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b style=\"text-decoration-line: underline;\">Histogram of oriented Gradients (HoG)</b><div><b style=\"text-decoration-line: underline;\"><br></b></div><div>* {{c1::Compute the gradient vector of every pixel, as well as its magnitude and direction}}</div><div>* {{c2::Divide the image into many 8x8 pixel cells.}}<br>* {{c3::Bin the magnitude values of these cells and add into K buckets of direction}}</div><div><br></div>",
                "<img src=\"paste-bdbebb1d61a87b4c76b037c84ac56c557868a7a1.png\">"
            ],
            "flags": 0,
            "guid": "K8O.[+c8{e",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Convolutional Layer</u></b><div><b><u><br></u></b></div><div>Use filter and convolve it over the image.</div><div><br></div><div><b>Hyperparameters</b></div><div>* {{c4::Number of filters \\(K\\)}}</div><div>* {{c5::Spatial extend / kernel size \\(F\\)}}</div><div>* {{c6::Stride \\(S\\)}}</div><div>* {{c7::Amount of zero padding \\(P\\)}}</div><div><br></div><div><b>Output Size</b></div><div>* {{c1::\\(W_2 = (W_1 - F + 2P) / S + 1\\)}}</div><div>* {{c1::\\(H_2 = (H_1 - F + 2P) / S + 1\\)}}<br></div><div>* {{c2::\\(D_2&nbsp; = K\\)}}<br>Output: \\(W_2 \\times H_2 \\times D_2\\)</div><div><br></div><div><b>Number of weights</b></div><div>{{c3::\\(F \\cdot F \\cdot D_1 \\cdot K\\)}}</div>",
                "<img src=\"paste-d924e53ba976bd8e29ccfd26478ffaaeab393957.png\">"
            ],
            "flags": 0,
            "guid": "N_bS*2Y+zi",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Pooling</u></b><div><b><u><br></u></b></div><div>Make the representations smaller and more manageable</div><div>Operate independently on each activation map</div><div><br></div><div><b>Hyperparamters</b></div><div>* {{c6::Spatial extend / Kernel size \\(F\\)}}</div><div>* {{c5::Stride \\(S\\)}}</div><div><br></div><div><b>Output Size</b></div><div>* {{c7::\\(W_2 = (W_1 - F) / S + 1\\)}}</div><div>* {{c7::\\(H_2 = (H_1 - F) / S + 1\\)}}</div><div>* {{c8::\\(D_2 = D_1\\)}}</div><div>Output: \\(W_2 \\times H_2 \\times D\\)</div><div><br></div><div><b>Parameters</b></div><div>{{c1::0}}</div><div><br></div><div>Typically no zero padding is used</div>",
                "<img src=\"paste-f6bf610e0fd38d160198b14e8b436ea71c029e96.png\">"
            ],
            "flags": 0,
            "guid": "eHo{pt7NIA",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Convolutional Network</u></b><div><b><u><br></u></b></div><div>A convolutional Network is a {{c1::sequence of Convolution Layers}}, interspersed with {{c2::activation functions}} and {{c3::pooling functions}}</div><div>...followed by {{c4::one or multiple FC layers to compute the output}} (regression of classification)</div>",
                ""
            ],
            "flags": 0,
            "guid": "b8Ft9ja`R}",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Important CNN Architectures</u></b><div><b><u><br></u></b></div><div><b>AlexNet (2012)</b></div><div>{{c3::<div>11x11 Filter&nbsp;</div><div>5 Layers</div><div>First use of ReLU</div><div>Norm layers</div><div>Parameters: 35K</div><div><img src=\"paste-be6798236a93f94b4448ec1b23f14d0582cb227d.png\"></div>}}<br></div><div><br></div><div><b>VGGNet (2014)</b></div><div>{{c2::<div>16-19 layers</div><div>Only 3x3 Conv</div><div>and 2x2 Max Pool</div><div><img src=\"paste-820e6a92affacef82c89053565997ff068720e19.png\"></div>}}<br></div><div><br></div><div><b>ResNet</b></div><div>{{c1::<div>152 Layers</div><div>thanks to Residual Connections</div><div><img src=\"paste-f5e871a0277744f8935d7cce0f208788f580d3a4.png\"></div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "Gy@ZI5-Duc",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Transfer Learning</u></b><div><b><u><br></u></b></div><div>{{c1::<div>Train on huge data-set</div><div>Freeze layers and adapt only the last (FC) layers</div>}}<br></div><div><br></div><div>Allows to reuse the general purpose convolutions</div>",
                ""
            ],
            "flags": 0,
            "guid": "ck.8g1@r,$",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Semantic Segmentation: Fully Convolutional</u></b><div><b><u><br></u></b></div><div>{{c1::Design network as a bunch of convolutional layers, with downsampling and upsamling inside the network}}</div><div><br></div><div><img src=\"paste-8d7eb8e64e7a1a468b16d218a955fee5c373912b.png\"><br></div><div><br></div><div><b>Upsampling / Unpooling</b></div><div>* Nearest Neighbour</div><div>* Max Unpooling -&gt; Remember positions from Max Pooling</div><div>* Learnable: Transpose Convolutions</div>",
                ""
            ],
            "flags": 0,
            "guid": "x/oJ|:SV52",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Region Proposals: Selective Search</u></b><div><br>{{c1::Find blobby image regions that are likely to contain objects}}</div><div>Relatively fast to run</div>",
                ""
            ],
            "flags": 0,
            "guid": "nD}qrK82`0",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Architectures Object Detection</u></b><div><b><u><br></u></b></div><div><b>R-CNN<br></b><div>{{c1::Extract regions and classify each region with a CNN}}</div><div><br></div><div><b>Fast R-CNN</b></div><div>{{c2::Pass the image through the CNN before cropping}}</div><div><br></div><div><b>Faster R-CNN</b></div><div>{{c3::Introduce Region Proposal Network to model as well&nbsp;}}</div><div><b><u><br></u></b></div></div>",
                ""
            ],
            "flags": 0,
            "guid": "yc{Nxui;n/",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>RoI Align</u></b><div><br>How to resize regions into equal sized tensors?</div><div><br><b>RoI Pool</b></div><div>{{c1::Max-Pooling Operation in different sub regions}}</div><div><br></div><div><b>RoI Align</b></div><div>{{c2::<div>Use Bilinear Interpolation to align pixels</div><div></div>}}<br></div>",
                "<img src=\"paste-15a5317453c403f59e9455e9c4fb07a4e32d1b36.png\">"
            ],
            "flags": 0,
            "guid": "mM/AX0./t%",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Mask R-CNN</u></b><div><br></div><div>Add {{c1::Mask Prediction output}} to {{c2::faster R-CNN}} to predict {{c3::masks for instance segmentation}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "gCd$;sAql2",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "cnn",
                "computer_vision"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Robot</u></b><div>A robot is a {{c1::reprogrammable multifunctional manipulator}} designed to move material, parts, tools, or specialized devices through variable programmed motions for the performance of a {{c2::variety of tasks}}.</div>",
                "<img src=\"paste-f793b808bdc47e8d9252687a5a733578eae1d905.png\">"
            ],
            "flags": 0,
            "guid": "I?Y*YU/V<V",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Basic Robot Terminology</u></b><div><b><u><br></u></b></div><div><b>Joints</b></div><div>{{c1::\\(q = [q_1, q_2]\\)<div>Joint velocities: \\(\\dot q\\)</div><div>Joint acceleration: \\(\\ddot q\\)}}</div></div><div><br></div><div><b>Task/Endeffector space</b></div><div>{{c2::\\(x\\)<div>Endeffector velocities \\(\\dot x\\)</div><div>Endeffector accelerations \\(\\ddot x\\)}}</div></div><div><br></div><div><b>Workspace</b></div><div>{{c3::The workspace is the reachable space with the end-effector}}</div><div><br></div><div><b>Actions</b></div><div>{{c4::\\(u\\)<div>In robotics always mapped in some way to torques}}</div></div><div><br></div><div><b>(Control) Policy</b></div><div>{{c5::\\(u = \\pi (s)\\)<div>Deterministic no exploration}}</div></div>",
                ""
            ],
            "flags": 0,
            "guid": "xOzLBz9u@{",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b52aca2c96b24a9c884c6e8162ab339a-ao-1",
                "Block diagram of complete roboter system",
                "<img src=\"tmp2lwhkdiv.png\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-1-A.svg\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "h)xi7Xle?A",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b52aca2c96b24a9c884c6e8162ab339a-ao-2",
                "Block diagram of complete roboter system",
                "<img src=\"tmp2lwhkdiv.png\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-2-A.svg\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "A0PRPc$qa4",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b52aca2c96b24a9c884c6e8162ab339a-ao-3",
                "Block diagram of complete roboter system",
                "<img src=\"tmp2lwhkdiv.png\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-3-A.svg\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "C-V;p.&:T>",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "b52aca2c96b24a9c884c6e8162ab339a-ao-4",
                "Block diagram of complete roboter system",
                "<img src=\"tmp2lwhkdiv.png\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-4-A.svg\" />",
                "<img src=\"b52aca2c96b24a9c884c6e8162ab339a-ao-O.svg\" />"
            ],
            "flags": 0,
            "guid": "kix^N:>:Hc",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Complete Roboter System</u></b><div><b><u><br></u></b></div><div><b>Trajectory</b></div><div>{{c4::<div>Specified the joint positions, velocities and accelerations</div><div>for each instant of time \\(t\\)</div>}}<br></div><div><br></div><div><b>Control</b></div><div>{{c3::Given desired \\((q_d / x_d)\\) and actual values \\((q / x)\\), computes controls (torques)}}</div><div><br></div><div><b>Dynamics</b></div><div>{{c2::<div>We formally</div><div>* Apply a torque</div><div>* Integrate the acceleration to obtain joint veolcities and joint positions for next time step</div>}}<br></div><div><br></div><div><b>Kinematics</b></div><div>{{c1::With kinematics we refer to the geometric mapping between joint angles to the end-effector position (and orientation)}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "LGt8|ZB&jQ",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Forward Kinematics</u></b><div><b><u><br></u></b></div><div>Forward kinematics refers to the use of the {{c1::kinematic equations of a robot}} to compute the {{c2::position of the end-effector}} from {{c3::speicified values for the joint parameters}}.</div>",
                ""
            ],
            "flags": 0,
            "guid": "BHI<_9O7Ns",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Inverse Kinematics</u></b><div><b><u><br></u></b></div><div>Inverse kinematics is the {{c1::mathematical process of calculating the variable joint parameters}} needed to place {{c2::the end of a kinematic chain}}, in a {{c3::given position}} and orientation relative to the start of the chain.</div><div><br></div><div>How can we reach this goal?</div><div><br></div><div>Can be solved in close form for some robots, but in general there may not be a solution.</div>",
                ""
            ],
            "flags": 0,
            "guid": "I@Et-W,T@=",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Denavit-Hartenberg (DH) Convention</u></b><div><b><u><br></u></b></div><div>Rules / Convention how to define the transformations between 2 links:<br>1. {{c1::Rotate for \\(\\theta\\)<b>&nbsp;</b>around \\(z_0\\)}}</div><div>2. {{c2::Move along \\(z_0\\) for \\(d\\)}}</div><div>3. {{c3::Move along \\(x_1\\) for \\(a\\)}}</div><div>4. {{c4::Rotate for \\(\\alpha\\) around \\(y_1\\)}}</div>",
                "<div><img src=\"1280px-Classic_DH_Parameters_Convention.png\"><br></div><div>Source:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters\">https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters</a></div>"
            ],
            "flags": 0,
            "guid": "u(#g2&0`dL",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Singularities</u></b><div><b><u><br></u></b></div><div>What happens when I stretch out my arm?<br><br></div><div>{{c1::<div>\\(\\det (J) = 0\\)</div><div>-&gt; Lose a degree of freedom</div>}}<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "H!@bF@WBVD",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Differential Forward Kinematics</u></b><div><br></div><div>Velocity</div><div>{{c1::\\[\\dot x = \\frac{d}{dt} f(q) = \\frac{df(q)}{dq} \\frac{dq}{dt} = J(q) \\dot q\\]}}</div><div><br></div><div>Jacobian</div><div>{{c2::\\[J(q) = \\frac{df(q)}{dq}\\]}}</div>",
                ""
            ],
            "flags": 0,
            "guid": "oDxI@2G7Ti",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Dynamics</u></b><div><b><u><br></u></b></div><div>Find model such that</div><div>{{c4::\\[\\ddot q = f(q, \\dot q, u)\\]}}</div><div><br></div><div><b>General Form</b></div><div>{{c3::\\[u = M(q)\\ddot q + c(q, \\dot q) + g(q)\\]}}</div><div><br></div><div>Motor torques \\(u\\)</div><div>Joint position, velocities, accelerations: \\(q, \\dot q, \\ddot q\\)</div><div>Mass matrix: \\(M(q)\\)</div><div>Coriolies forces and centripetal forces: \\(c(q, \\dot q)\\)</div><div>Gravity \\(g(q)\\)</div><div><br></div><div><b>Models</b></div><div>Inverse: {{c2::\\(u = M(q)\\ddot q + c(q, \\dot q) + g(q)\\)}}</div><div>Forward: {{c1::\\(\\ddot q = M^{-1} (q) (u - c(q, \\dot q) - g(q))\\)}}</div><div><br>Can be used as simulator through integretation</div>",
                ""
            ],
            "flags": 0,
            "guid": "h&/ueEbSHi",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Representation of Trajectories</u></b><div><b><u><br></u></b></div><div>Any representation must be {{c2::twice differntiable}}!</div><div><br></div><div><b>Cubic Splines</b></div><div>{{c1::<div>Trajectory is smooth,</div><div>but jumps in acceleration</div><div>4 boundary conditions</div>}}<br></div><div><br></div><div><b>Quntic Splines</b></div><div>{{c3::<div>Smooth trajectories and accelerations</div><div>6 boundary conditions</div>}}<br></div><div><br></div><div><b>Linear Segments</b></div><div>{{c4::Linear segments with parabolic blends}}</div><div><br></div>",
                ""
            ],
            "flags": 0,
            "guid": "F2IQlwxX$]",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "840119a144b847598b856fc659d992ca-oa-1",
                "Feedback Control: Generic Idea",
                "<img src=\"tmp7sibw89p.png\" />",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-1-A.svg\" />",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "JJk*RRz2dc",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "840119a144b847598b856fc659d992ca-oa-2",
                "Feedback Control: Generic Idea",
                "<img src=\"tmp7sibw89p.png\" />",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-2-A.svg\" />",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "o4@%S19:&^",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "840119a144b847598b856fc659d992ca-oa-3",
                "Feedback Control: Generic Idea",
                "<img src=\"tmp7sibw89p.png\" />",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-3-A.svg\" />",
                "<img src=\"840119a144b847598b856fc659d992ca-oa-O.svg\" />"
            ],
            "flags": 0,
            "guid": "uIR!/Er+6T",
            "note_model_uuid": "5d473e5e-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Linear Control Types</u></b><div><b><u><br></u></b></div><div><b>P-Control</b></div>Control based {{c1::on <i>position </i>error}}<div>{{c6::\\(u_t = K_P(q_d - q_t)\\)}}</div><div>Problems: {{c2::Oscillation}}</div><div><br></div><div><b>PD-Control</b></div><div>Control based on {{c3::<i>position</i>&nbsp;error and <i>velocity</i>&nbsp;error}}</div><div>{{c4::\\(u_t = K_P (q_d - q_t) + K_D(\\dot q_d - \\dot q_t)\\)}}</div><div>Problems: {{c5::steady state error}}</div><div><br></div><div><b>PD-Control with Gravity Compensation</b></div><div>{{c7::\\(u_t = K_P (q_d - q_t) + K_D(\\dot q_d - \\dot q_t) + g(q)\\)}}</div><div>Requires model of all steady state components!</div>",
                ""
            ],
            "flags": 0,
            "guid": "N!u#/(043>",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Inverse Kinematics Solving</u></b><div><br></div><div><b>Problems</b></div><div>{{c2::Multiple solutions even for non-redundant robots}}</div><div>{{c1::Redudancy results in infinitely many solutions}}<br></div><div><br></div><div><b>Differential Inverse Kinematics</b></div><div>{{c3::\\(\\dot q_t = h(x_d, q_t)\\)}}</div><div>Computably by optimization</div>",
                ""
            ],
            "flags": 0,
            "guid": "z-VbW?zAR:",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        },
        {
            "__type__": "Note",
            "data": "",
            "fields": [
                "<b><u>Solving Differential inverse kinematics</u></b><div><b><u><br></u></b></div><div><b>Jacobian Transpose</b></div><div>Minimize Error \\(E = \\frac{1}{2}(x - f(q))^T (x - f(q))\\)</div><div>Update with&nbsp;</div><div>\\[\\dot q_d = {{c3::- \\alpha \\frac{\\partial E}{\\partial q} = \\alpha J^T(x - f(q))}}\\]</div><div><br></div><div><b>Jacobian Pseudo Inverse</b></div><div>Assume we are not so far from our solution</div><div>Take smallest step \\(\\dot q\\) that has a desired task space velocity</div><div>\\(\\dot x_d = \\eta (x_d - f(q)) = \\eta e\\)</div><div><br>Optimize:</div><div>\\(\\min_{\\dot q_d} \\dot q_d^T \\dot q_d, \\qquad J(q) \\dot q_d = \\dot x_d\\)</div><div><br></div><div>Solution:</div><div>\\[\\dot q_d = {{c2::J(q)^T (J(q) J(q)^T)^{-1} \\dot x_d = \\eta J(q)^\\dagger e}}\\]</div><div><br></div><div><b>Damped Pseudo Inverse</b></div><div>Jacobian not solvable when singularity</div><div>\\[\\dot q_d = {{c1::J(q)^T (J(q) J(q)^T + \\lambda I)^{-1} \\dot x_d = \\eta J(q)^{\\dagger (\\lambda)} e}}\\]<br></div>",
                ""
            ],
            "flags": 0,
            "guid": "NaaTcA}xnO",
            "note_model_uuid": "5d4fbd2c-b234-11ea-8783-f0d5bf9cf059",
            "tags": [
                "robotics"
            ]
        }
    ]
}